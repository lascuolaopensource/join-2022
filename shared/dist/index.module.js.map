{"version":3,"file":"index.module.js","sources":["../src/forms/utils.ts","../src/forms/loginEmail.ts","../src/forms/loginPassword.ts","../src/forms/userExists.ts","../src/forms/contacts.ts","../src/forms/evaluation.ts","../src/forms/enroll.ts","../src/forms/billing.ts","../src/types/strapi.ts","../src/helpers/index.ts"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const re = {\n    url: /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/,\n    cf: /^(?:[A-Z][AEIOU][AEIOUX]|[AEIOU]X{2}|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}(?:[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[15MR][\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM]|[AC-EHLMPR-T][26NS][9V])|(?:[02468LNQSU][048LQU]|[13579MPRTV][26NS])B[26NS][9V])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/,\n};\n\nexport const urlSchema = yup.string().matches(re.url);\nexport const cfSchema = yup.string().matches(re.cf);\nexport const emailSchema = yup.string().email();\n\nexport function thenReq(value: boolean | string) {\n    return {\n        is: value,\n        then: (schema: yup.AnySchema) => schema.required(),\n        otherwise: (schema: yup.AnySchema) => schema.optional(),\n    };\n}\n\nexport function thenUrlReq(value: boolean | string) {\n    return {\n        is: value,\n        then: (schema: yup.AnySchema) => urlSchema.required(),\n        otherwise: (schema: yup.AnySchema) => schema.optional(),\n    };\n}\n\nexport function thenNull(value: boolean | string) {\n    return {\n        is: value,\n        then: (schema: yup.AnySchema) => schema.optional(),\n        otherwise: (schema: yup.AnySchema) => schema.required(),\n    };\n}\n\nexport const nullOrReq = {\n    is: (v: string | boolean | number) => v == true,\n    then: (s: yup.AnySchema) => s.nullable(),\n    otherwise: (s: yup.AnySchema) => s.required(),\n};\n","import * as yup from \"yup\";\nimport { emailSchema } from \"./utils\";\n\n/**\n * LoginEmail\n */\n\nexport const leValues = {\n    email: \"\",\n};\n\nexport const leSchema = yup.object({\n    email: emailSchema.required(),\n});\n\nexport type leType = typeof leValues;\n\nexport type leResponse = {\n    email: string;\n    username: string;\n};\n\nexport const enum leErrors {\n    notFound = \"leNotFound\",\n    badRequest = \"leBadRequest\",\n}\n","import * as yup from \"yup\";\n\n/**\n * LoginPassword\n */\n\nexport const lpValues = {\n    password: \"\",\n};\n\nexport const lpSchema = yup.object({\n    password: yup.string().required(),\n});\n\nexport type lpType = typeof lpValues;\n","import * as yup from \"yup\";\nimport { emailSchema } from \"./utils\";\n\n/**\n * User Exists\n */\n\nexport type ueParam = \"email\" | \"username\";\n\nexport type ueType = Record<ueParam, string>;\n\nexport const ueSchema = yup.object({\n    email: emailSchema.optional(),\n    username: yup.string().optional(),\n});\n\nexport type ueResponse = {\n    exists: boolean;\n};\n","import * as yup from \"yup\";\nimport { thenReq } from \"./utils\";\n\n/**\n * Contacts\n */\n\nexport const cValues = {\n    exists: false,\n    user: {\n        email: \"\",\n        name: \"\",\n        surname: \"\",\n    },\n    phone: \"\",\n};\n\nexport const cSchema = yup.object({\n    exists: yup.boolean().required(),\n    user: yup\n        .object({\n            email: yup.string().email().required(),\n            name: yup.string().required(),\n            surname: yup.string().required(),\n        })\n        .when(\"exists\", thenReq(false)),\n    phone: yup.string().required(),\n});\n\nexport type cType = typeof cValues;\n","import * as yup from \"yup\";\nimport { thenReq, thenUrlReq, urlSchema } from \"./utils\";\n\n/**\n * Evaluation\n */\n\nexport const evValues = {\n    letterNeeded: true,\n    letter: \"\",\n    portfolioNeeded: true,\n    portfolio: \"\",\n    cvNeeded: true,\n    cv: \"\",\n};\n\nexport const evSchema = yup.object({\n    letterNeeded: yup.boolean().required(),\n    letter: yup.string().when(\"letterNeeded\", thenReq(true)),\n    portfolioNeeded: yup.boolean().required(),\n    portfolio: yup.string().when(\"portfolioNeeded\", thenUrlReq(true)),\n    cvNeeded: yup.boolean().required(),\n    cv: yup.string().when(\"cvNeeded\", thenUrlReq(true)),\n});\n\nexport type evType = typeof evValues;\n","import * as yup from \"yup\";\nimport * as contacts from \"./contacts\";\nimport * as evaluation from \"./evaluation\";\nimport { thenReq } from \"./utils\";\n\n/**\n * Enrollment form\n */\n\nexport const enSchema = yup.object({\n    courseId: yup.number().required(),\n    contacts: contacts.cSchema,\n    evaluationNeeded: yup.boolean().required(),\n    evaluation: evaluation.evSchema.when(\"evaluationNeeded\", thenReq(true)),\n});\n\nexport type enFormBody = [contacts.cType, evaluation.evType?];\n\nexport interface enType {\n    courseId: string;\n    contacts: contacts.cType;\n    evaluationNeeded: boolean;\n    evaluation: evaluation.evType;\n}\n\nexport interface enResponse {\n    paymentId: string | null;\n}\n","import * as yup from \"yup\";\nimport { thenReq, thenNull, cfSchema } from \"./utils\";\n\n/**\n * Me\n */\n\nexport const bMeValues = {\n    cf: \"\",\n};\n\nexport const bMeSchema = yup.object({\n    cf: cfSchema,\n});\n\nexport type bMeType = typeof bMeValues;\n\n/**\n * Person\n */\n\nexport const bPersonValues = {\n    name: \"\",\n    surname: \"\",\n    cf: \"\",\n};\n\nexport const bPersonSchema = yup.object({\n    name: yup.string().required(),\n    surname: yup.string().required(),\n    cf: cfSchema,\n});\n\nexport type bPersonType = typeof bPersonValues;\n\n/**\n * Company\n */\n\nexport const bCompanyValues = {\n    name: \"\",\n    vat: \"\",\n    sdi: \"\",\n};\n\nexport const bCompanySchema = yup.object({\n    name: yup.string().required(),\n    vat: yup.string().required(),\n    sdi: yup.string().required(),\n});\n\nexport type bCompanyType = typeof bCompanyValues;\n\n/**\n * Address\n */\n\nexport const bAddressValues = {\n    cap: \"\",\n    town: \"\",\n    street: \"\",\n    province: \"\",\n};\n\nexport const bAddressSchema = yup.object({\n    cap: yup.string().required(),\n    town: yup.string().required(),\n    province: yup.string().required(),\n    street: yup.string().required(),\n});\n\nexport type bAddressType = typeof bAddressValues;\n\n/**\n * Billing options\n */\n\nexport const bOptions = [\"me\", \"person\", \"company\"] as const;\n\nexport type bOptionsType = typeof bOptions[number];\n\n/**\n * Billing\n */\n\nexport const bValues: bType = {\n    billingOption: null,\n    me: bMeValues,\n    person: bPersonValues,\n    company: bCompanyValues,\n    email: \"\",\n    address: bAddressValues,\n};\n\nexport const bSchema = yup.object({\n    // Modalit√†\n    billingOption: yup\n        .string()\n        .oneOf(bOptions as any)\n        .required(),\n    // Me\n    me: bMeSchema.when(\"billingOption\", thenReq(bOptions[0])),\n    person: bPersonSchema.when(\"billingOption\", thenReq(bOptions[1])),\n    company: bCompanySchema.when(\"billingOption\", thenReq(bOptions[2])),\n    // Generici\n    email: yup.string().email().when(\"billingOption\", thenNull(bOptions[0])),\n    address: bAddressSchema.required(),\n});\n\nexport interface bType {\n    billingOption: bOptionsType;\n    me: bMeType;\n    person: bPersonType;\n    company: bCompanyType;\n    email: string;\n    address: bAddressType;\n}\n","export type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  /** A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  DateTime: any;\n  /** A time string with format HH:mm:ss.SSS */\n  Time: any;\n  /** A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */\n  Date: any;\n  /** The `Upload` scalar type represents a file upload. */\n  Upload: any;\n  BillingInfoDataDynamicZoneInput: any;\n  /** A string used to identify an i18n locale */\n  I18NLocaleCode: any;\n};\n\n\n\n\n\n\nexport type Error = {\n  __typename?: 'Error';\n  code: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type Pagination = {\n  __typename?: 'Pagination';\n  total: Scalars['Int'];\n  page: Scalars['Int'];\n  pageSize: Scalars['Int'];\n  pageCount: Scalars['Int'];\n};\n\nexport type ResponseCollectionMeta = {\n  __typename?: 'ResponseCollectionMeta';\n  pagination: Pagination;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type IdFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  or?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  not?: Maybe<IdFilterInput>;\n  eq?: Maybe<Scalars['ID']>;\n  ne?: Maybe<Scalars['ID']>;\n  startsWith?: Maybe<Scalars['ID']>;\n  endsWith?: Maybe<Scalars['ID']>;\n  contains?: Maybe<Scalars['ID']>;\n  notContains?: Maybe<Scalars['ID']>;\n  containsi?: Maybe<Scalars['ID']>;\n  notContainsi?: Maybe<Scalars['ID']>;\n  gt?: Maybe<Scalars['ID']>;\n  gte?: Maybe<Scalars['ID']>;\n  lt?: Maybe<Scalars['ID']>;\n  lte?: Maybe<Scalars['ID']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  between?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type BooleanFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['Boolean']>>>;\n  or?: Maybe<Array<Maybe<Scalars['Boolean']>>>;\n  not?: Maybe<BooleanFilterInput>;\n  eq?: Maybe<Scalars['Boolean']>;\n  ne?: Maybe<Scalars['Boolean']>;\n  startsWith?: Maybe<Scalars['Boolean']>;\n  endsWith?: Maybe<Scalars['Boolean']>;\n  contains?: Maybe<Scalars['Boolean']>;\n  notContains?: Maybe<Scalars['Boolean']>;\n  containsi?: Maybe<Scalars['Boolean']>;\n  notContainsi?: Maybe<Scalars['Boolean']>;\n  gt?: Maybe<Scalars['Boolean']>;\n  gte?: Maybe<Scalars['Boolean']>;\n  lt?: Maybe<Scalars['Boolean']>;\n  lte?: Maybe<Scalars['Boolean']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['Boolean']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['Boolean']>>>;\n  between?: Maybe<Array<Maybe<Scalars['Boolean']>>>;\n};\n\nexport type StringFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['String']>>>;\n  or?: Maybe<Array<Maybe<Scalars['String']>>>;\n  not?: Maybe<StringFilterInput>;\n  eq?: Maybe<Scalars['String']>;\n  ne?: Maybe<Scalars['String']>;\n  startsWith?: Maybe<Scalars['String']>;\n  endsWith?: Maybe<Scalars['String']>;\n  contains?: Maybe<Scalars['String']>;\n  notContains?: Maybe<Scalars['String']>;\n  containsi?: Maybe<Scalars['String']>;\n  notContainsi?: Maybe<Scalars['String']>;\n  gt?: Maybe<Scalars['String']>;\n  gte?: Maybe<Scalars['String']>;\n  lt?: Maybe<Scalars['String']>;\n  lte?: Maybe<Scalars['String']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['String']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['String']>>>;\n  between?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type IntFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['Int']>>>;\n  or?: Maybe<Array<Maybe<Scalars['Int']>>>;\n  not?: Maybe<IntFilterInput>;\n  eq?: Maybe<Scalars['Int']>;\n  ne?: Maybe<Scalars['Int']>;\n  startsWith?: Maybe<Scalars['Int']>;\n  endsWith?: Maybe<Scalars['Int']>;\n  contains?: Maybe<Scalars['Int']>;\n  notContains?: Maybe<Scalars['Int']>;\n  containsi?: Maybe<Scalars['Int']>;\n  notContainsi?: Maybe<Scalars['Int']>;\n  gt?: Maybe<Scalars['Int']>;\n  gte?: Maybe<Scalars['Int']>;\n  lt?: Maybe<Scalars['Int']>;\n  lte?: Maybe<Scalars['Int']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['Int']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['Int']>>>;\n  between?: Maybe<Array<Maybe<Scalars['Int']>>>;\n};\n\nexport type FloatFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['Float']>>>;\n  or?: Maybe<Array<Maybe<Scalars['Float']>>>;\n  not?: Maybe<FloatFilterInput>;\n  eq?: Maybe<Scalars['Float']>;\n  ne?: Maybe<Scalars['Float']>;\n  startsWith?: Maybe<Scalars['Float']>;\n  endsWith?: Maybe<Scalars['Float']>;\n  contains?: Maybe<Scalars['Float']>;\n  notContains?: Maybe<Scalars['Float']>;\n  containsi?: Maybe<Scalars['Float']>;\n  notContainsi?: Maybe<Scalars['Float']>;\n  gt?: Maybe<Scalars['Float']>;\n  gte?: Maybe<Scalars['Float']>;\n  lt?: Maybe<Scalars['Float']>;\n  lte?: Maybe<Scalars['Float']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['Float']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['Float']>>>;\n  between?: Maybe<Array<Maybe<Scalars['Float']>>>;\n};\n\nexport type DateFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['Date']>>>;\n  or?: Maybe<Array<Maybe<Scalars['Date']>>>;\n  not?: Maybe<DateFilterInput>;\n  eq?: Maybe<Scalars['Date']>;\n  ne?: Maybe<Scalars['Date']>;\n  startsWith?: Maybe<Scalars['Date']>;\n  endsWith?: Maybe<Scalars['Date']>;\n  contains?: Maybe<Scalars['Date']>;\n  notContains?: Maybe<Scalars['Date']>;\n  containsi?: Maybe<Scalars['Date']>;\n  notContainsi?: Maybe<Scalars['Date']>;\n  gt?: Maybe<Scalars['Date']>;\n  gte?: Maybe<Scalars['Date']>;\n  lt?: Maybe<Scalars['Date']>;\n  lte?: Maybe<Scalars['Date']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['Date']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['Date']>>>;\n  between?: Maybe<Array<Maybe<Scalars['Date']>>>;\n};\n\nexport type TimeFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['Time']>>>;\n  or?: Maybe<Array<Maybe<Scalars['Time']>>>;\n  not?: Maybe<TimeFilterInput>;\n  eq?: Maybe<Scalars['Time']>;\n  ne?: Maybe<Scalars['Time']>;\n  startsWith?: Maybe<Scalars['Time']>;\n  endsWith?: Maybe<Scalars['Time']>;\n  contains?: Maybe<Scalars['Time']>;\n  notContains?: Maybe<Scalars['Time']>;\n  containsi?: Maybe<Scalars['Time']>;\n  notContainsi?: Maybe<Scalars['Time']>;\n  gt?: Maybe<Scalars['Time']>;\n  gte?: Maybe<Scalars['Time']>;\n  lt?: Maybe<Scalars['Time']>;\n  lte?: Maybe<Scalars['Time']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['Time']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['Time']>>>;\n  between?: Maybe<Array<Maybe<Scalars['Time']>>>;\n};\n\nexport type DateTimeFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['DateTime']>>>;\n  or?: Maybe<Array<Maybe<Scalars['DateTime']>>>;\n  not?: Maybe<DateTimeFilterInput>;\n  eq?: Maybe<Scalars['DateTime']>;\n  ne?: Maybe<Scalars['DateTime']>;\n  startsWith?: Maybe<Scalars['DateTime']>;\n  endsWith?: Maybe<Scalars['DateTime']>;\n  contains?: Maybe<Scalars['DateTime']>;\n  notContains?: Maybe<Scalars['DateTime']>;\n  containsi?: Maybe<Scalars['DateTime']>;\n  notContainsi?: Maybe<Scalars['DateTime']>;\n  gt?: Maybe<Scalars['DateTime']>;\n  gte?: Maybe<Scalars['DateTime']>;\n  lt?: Maybe<Scalars['DateTime']>;\n  lte?: Maybe<Scalars['DateTime']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['DateTime']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['DateTime']>>>;\n  between?: Maybe<Array<Maybe<Scalars['DateTime']>>>;\n};\n\nexport type JsonFilterInput = {\n  and?: Maybe<Array<Maybe<Scalars['JSON']>>>;\n  or?: Maybe<Array<Maybe<Scalars['JSON']>>>;\n  not?: Maybe<JsonFilterInput>;\n  eq?: Maybe<Scalars['JSON']>;\n  ne?: Maybe<Scalars['JSON']>;\n  startsWith?: Maybe<Scalars['JSON']>;\n  endsWith?: Maybe<Scalars['JSON']>;\n  contains?: Maybe<Scalars['JSON']>;\n  notContains?: Maybe<Scalars['JSON']>;\n  containsi?: Maybe<Scalars['JSON']>;\n  notContainsi?: Maybe<Scalars['JSON']>;\n  gt?: Maybe<Scalars['JSON']>;\n  gte?: Maybe<Scalars['JSON']>;\n  lt?: Maybe<Scalars['JSON']>;\n  lte?: Maybe<Scalars['JSON']>;\n  null?: Maybe<Scalars['Boolean']>;\n  notNull?: Maybe<Scalars['Boolean']>;\n  in?: Maybe<Array<Maybe<Scalars['JSON']>>>;\n  notIn?: Maybe<Array<Maybe<Scalars['JSON']>>>;\n  between?: Maybe<Array<Maybe<Scalars['JSON']>>>;\n};\n\nexport type ComponentBillingCompany = {\n  __typename?: 'ComponentBillingCompany';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  vat: Scalars['String'];\n  sdi: Scalars['String'];\n};\n\nexport type ComponentBillingPerson = {\n  __typename?: 'ComponentBillingPerson';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  surname: Scalars['String'];\n  cf: Scalars['String'];\n};\n\nexport type ComponentLocationAddressInput = {\n  id?: Maybe<Scalars['ID']>;\n  cap?: Maybe<Scalars['String']>;\n  town?: Maybe<Scalars['String']>;\n  province?: Maybe<Scalars['String']>;\n  street?: Maybe<Scalars['String']>;\n};\n\nexport type ComponentLocationAddress = {\n  __typename?: 'ComponentLocationAddress';\n  id: Scalars['ID'];\n  cap: Scalars['String'];\n  town: Scalars['String'];\n  province: Scalars['String'];\n  street: Scalars['String'];\n};\n\nexport type ComponentTimeMeetingFiltersInput = {\n  date?: Maybe<DateFilterInput>;\n  and?: Maybe<Array<Maybe<ComponentTimeMeetingFiltersInput>>>;\n  or?: Maybe<Array<Maybe<ComponentTimeMeetingFiltersInput>>>;\n  not?: Maybe<ComponentTimeMeetingFiltersInput>;\n};\n\nexport type ComponentTimeMeetingInput = {\n  id?: Maybe<Scalars['ID']>;\n  date?: Maybe<Scalars['Date']>;\n  timeSlots?: Maybe<Array<Maybe<ComponentTimeTimeSlotInput>>>;\n};\n\nexport type ComponentTimeMeeting = {\n  __typename?: 'ComponentTimeMeeting';\n  id: Scalars['ID'];\n  date?: Maybe<Scalars['Date']>;\n  timeSlots?: Maybe<Array<Maybe<ComponentTimeTimeSlot>>>;\n};\n\n\nexport type ComponentTimeMeetingTimeSlotsArgs = {\n  filters?: Maybe<ComponentTimeTimeSlotFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type ComponentTimeTimeSlotFiltersInput = {\n  startTime?: Maybe<TimeFilterInput>;\n  endTime?: Maybe<TimeFilterInput>;\n  and?: Maybe<Array<Maybe<ComponentTimeTimeSlotFiltersInput>>>;\n  or?: Maybe<Array<Maybe<ComponentTimeTimeSlotFiltersInput>>>;\n  not?: Maybe<ComponentTimeTimeSlotFiltersInput>;\n};\n\nexport type ComponentTimeTimeSlotInput = {\n  id?: Maybe<Scalars['ID']>;\n  startTime?: Maybe<Scalars['Time']>;\n  endTime?: Maybe<Scalars['Time']>;\n};\n\nexport type ComponentTimeTimeSlot = {\n  __typename?: 'ComponentTimeTimeSlot';\n  id: Scalars['ID'];\n  startTime?: Maybe<Scalars['Time']>;\n  endTime?: Maybe<Scalars['Time']>;\n};\n\nexport type UploadFileFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  name?: Maybe<StringFilterInput>;\n  alternativeText?: Maybe<StringFilterInput>;\n  caption?: Maybe<StringFilterInput>;\n  width?: Maybe<IntFilterInput>;\n  height?: Maybe<IntFilterInput>;\n  formats?: Maybe<JsonFilterInput>;\n  hash?: Maybe<StringFilterInput>;\n  ext?: Maybe<StringFilterInput>;\n  mime?: Maybe<StringFilterInput>;\n  size?: Maybe<FloatFilterInput>;\n  url?: Maybe<StringFilterInput>;\n  previewUrl?: Maybe<StringFilterInput>;\n  provider?: Maybe<StringFilterInput>;\n  provider_metadata?: Maybe<JsonFilterInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<UploadFileFiltersInput>>>;\n  or?: Maybe<Array<Maybe<UploadFileFiltersInput>>>;\n  not?: Maybe<UploadFileFiltersInput>;\n};\n\nexport type UploadFileInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash?: Maybe<Scalars['String']>;\n  ext?: Maybe<Scalars['String']>;\n  mime?: Maybe<Scalars['String']>;\n  size?: Maybe<Scalars['Float']>;\n  url?: Maybe<Scalars['String']>;\n  previewUrl?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  provider_metadata?: Maybe<Scalars['JSON']>;\n};\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  name: Scalars['String'];\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['Int']>;\n  height?: Maybe<Scalars['Int']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  ext?: Maybe<Scalars['String']>;\n  mime: Scalars['String'];\n  size: Scalars['Float'];\n  url: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<GenericMorph>>>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type UploadFileEntity = {\n  __typename?: 'UploadFileEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<UploadFile>;\n};\n\nexport type UploadFileEntityResponse = {\n  __typename?: 'UploadFileEntityResponse';\n  data?: Maybe<UploadFileEntity>;\n};\n\nexport type UploadFileEntityResponseCollection = {\n  __typename?: 'UploadFileEntityResponseCollection';\n  data: Array<UploadFileEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UploadFileRelationResponseCollection = {\n  __typename?: 'UploadFileRelationResponseCollection';\n  data: Array<UploadFileEntity>;\n};\n\nexport type I18NLocaleFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  name?: Maybe<StringFilterInput>;\n  code?: Maybe<StringFilterInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<I18NLocaleFiltersInput>>>;\n  or?: Maybe<Array<Maybe<I18NLocaleFiltersInput>>>;\n  not?: Maybe<I18NLocaleFiltersInput>;\n};\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  name?: Maybe<Scalars['String']>;\n  code?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type I18NLocaleEntity = {\n  __typename?: 'I18NLocaleEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<I18NLocale>;\n};\n\nexport type I18NLocaleEntityResponse = {\n  __typename?: 'I18NLocaleEntityResponse';\n  data?: Maybe<I18NLocaleEntity>;\n};\n\nexport type I18NLocaleEntityResponseCollection = {\n  __typename?: 'I18NLocaleEntityResponseCollection';\n  data: Array<I18NLocaleEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UsersPermissionsPermissionFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  action?: Maybe<StringFilterInput>;\n  role?: Maybe<UsersPermissionsRoleFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<UsersPermissionsPermissionFiltersInput>>>;\n  or?: Maybe<Array<Maybe<UsersPermissionsPermissionFiltersInput>>>;\n  not?: Maybe<UsersPermissionsPermissionFiltersInput>;\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  action: Scalars['String'];\n  role?: Maybe<UsersPermissionsRoleEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type UsersPermissionsPermissionEntity = {\n  __typename?: 'UsersPermissionsPermissionEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<UsersPermissionsPermission>;\n};\n\nexport type UsersPermissionsPermissionRelationResponseCollection = {\n  __typename?: 'UsersPermissionsPermissionRelationResponseCollection';\n  data: Array<UsersPermissionsPermissionEntity>;\n};\n\nexport type UsersPermissionsRoleFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  name?: Maybe<StringFilterInput>;\n  description?: Maybe<StringFilterInput>;\n  type?: Maybe<StringFilterInput>;\n  permissions?: Maybe<UsersPermissionsPermissionFiltersInput>;\n  users?: Maybe<UsersPermissionsUserFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<UsersPermissionsRoleFiltersInput>>>;\n  or?: Maybe<Array<Maybe<UsersPermissionsRoleFiltersInput>>>;\n  not?: Maybe<UsersPermissionsRoleFiltersInput>;\n};\n\nexport type UsersPermissionsRoleInput = {\n  name?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  users?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n  permissions?: Maybe<UsersPermissionsPermissionRelationResponseCollection>;\n  users?: Maybe<UsersPermissionsUserRelationResponseCollection>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  filters?: Maybe<UsersPermissionsPermissionFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  filters?: Maybe<UsersPermissionsUserFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type UsersPermissionsRoleEntity = {\n  __typename?: 'UsersPermissionsRoleEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<UsersPermissionsRole>;\n};\n\nexport type UsersPermissionsRoleEntityResponse = {\n  __typename?: 'UsersPermissionsRoleEntityResponse';\n  data?: Maybe<UsersPermissionsRoleEntity>;\n};\n\nexport type UsersPermissionsRoleEntityResponseCollection = {\n  __typename?: 'UsersPermissionsRoleEntityResponseCollection';\n  data: Array<UsersPermissionsRoleEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UsersPermissionsUserFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  username?: Maybe<StringFilterInput>;\n  email?: Maybe<StringFilterInput>;\n  provider?: Maybe<StringFilterInput>;\n  password?: Maybe<StringFilterInput>;\n  resetPasswordToken?: Maybe<StringFilterInput>;\n  confirmationToken?: Maybe<StringFilterInput>;\n  confirmed?: Maybe<BooleanFilterInput>;\n  blocked?: Maybe<BooleanFilterInput>;\n  role?: Maybe<UsersPermissionsRoleFiltersInput>;\n  enrollments?: Maybe<EnrollmentFiltersInput>;\n  userInfo?: Maybe<UserInfoFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<UsersPermissionsUserFiltersInput>>>;\n  or?: Maybe<Array<Maybe<UsersPermissionsUserFiltersInput>>>;\n  not?: Maybe<UsersPermissionsUserFiltersInput>;\n};\n\nexport type UsersPermissionsUserInput = {\n  username?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  provider?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  resetPasswordToken?: Maybe<Scalars['String']>;\n  confirmationToken?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<Scalars['ID']>;\n  enrollments?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  userInfo?: Maybe<Scalars['ID']>;\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  username: Scalars['String'];\n  email: Scalars['String'];\n  provider?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsRoleEntityResponse>;\n  enrollments?: Maybe<EnrollmentRelationResponseCollection>;\n  userInfo?: Maybe<UserInfoEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type UsersPermissionsUserEnrollmentsArgs = {\n  filters?: Maybe<EnrollmentFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type UsersPermissionsUserEntity = {\n  __typename?: 'UsersPermissionsUserEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<UsersPermissionsUser>;\n};\n\nexport type UsersPermissionsUserEntityResponse = {\n  __typename?: 'UsersPermissionsUserEntityResponse';\n  data?: Maybe<UsersPermissionsUserEntity>;\n};\n\nexport type UsersPermissionsUserEntityResponseCollection = {\n  __typename?: 'UsersPermissionsUserEntityResponseCollection';\n  data: Array<UsersPermissionsUserEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UsersPermissionsUserRelationResponseCollection = {\n  __typename?: 'UsersPermissionsUserRelationResponseCollection';\n  data: Array<UsersPermissionsUserEntity>;\n};\n\nexport type AreaFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  name?: Maybe<StringFilterInput>;\n  courses?: Maybe<CourseFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  localizations?: Maybe<AreaFiltersInput>;\n  locale?: Maybe<StringFilterInput>;\n  and?: Maybe<Array<Maybe<AreaFiltersInput>>>;\n  or?: Maybe<Array<Maybe<AreaFiltersInput>>>;\n  not?: Maybe<AreaFiltersInput>;\n};\n\nexport type AreaInput = {\n  name?: Maybe<Scalars['String']>;\n  courses?: Maybe<Array<Maybe<Scalars['ID']>>>;\n};\n\nexport type Area = {\n  __typename?: 'Area';\n  name?: Maybe<Scalars['String']>;\n  courses?: Maybe<CourseRelationResponseCollection>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  localizations?: Maybe<AreaRelationResponseCollection>;\n  locale?: Maybe<Scalars['String']>;\n};\n\n\nexport type AreaCoursesArgs = {\n  filters?: Maybe<CourseFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type AreaLocalizationsArgs = {\n  filters?: Maybe<AreaFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type AreaEntity = {\n  __typename?: 'AreaEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<Area>;\n};\n\nexport type AreaEntityResponse = {\n  __typename?: 'AreaEntityResponse';\n  data?: Maybe<AreaEntity>;\n};\n\nexport type AreaEntityResponseCollection = {\n  __typename?: 'AreaEntityResponseCollection';\n  data: Array<AreaEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type AreaRelationResponseCollection = {\n  __typename?: 'AreaRelationResponseCollection';\n  data: Array<AreaEntity>;\n};\n\nexport type BillingInfoDataDynamicZone = ComponentBillingCompany | ComponentBillingPerson | Error;\n\n\nexport type BillingInfoFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  email?: Maybe<StringFilterInput>;\n  payment?: Maybe<PaymentFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<BillingInfoFiltersInput>>>;\n  or?: Maybe<Array<Maybe<BillingInfoFiltersInput>>>;\n  not?: Maybe<BillingInfoFiltersInput>;\n};\n\nexport type BillingInfoInput = {\n  address?: Maybe<ComponentLocationAddressInput>;\n  email?: Maybe<Scalars['String']>;\n  data?: Maybe<Array<Scalars['BillingInfoDataDynamicZoneInput']>>;\n  payment?: Maybe<Scalars['ID']>;\n};\n\nexport type BillingInfo = {\n  __typename?: 'BillingInfo';\n  address: ComponentLocationAddress;\n  email: Scalars['String'];\n  data: Array<Maybe<BillingInfoDataDynamicZone>>;\n  payment?: Maybe<PaymentEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BillingInfoEntity = {\n  __typename?: 'BillingInfoEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<BillingInfo>;\n};\n\nexport type BillingInfoEntityResponse = {\n  __typename?: 'BillingInfoEntityResponse';\n  data?: Maybe<BillingInfoEntity>;\n};\n\nexport type BillingInfoEntityResponseCollection = {\n  __typename?: 'BillingInfoEntityResponseCollection';\n  data: Array<BillingInfoEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type CourseFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  title?: Maybe<StringFilterInput>;\n  description?: Maybe<StringFilterInput>;\n  preconditionsNeeded?: Maybe<BooleanFilterInput>;\n  price?: Maybe<IntFilterInput>;\n  confirmed?: Maybe<BooleanFilterInput>;\n  enrollmentDeadline?: Maybe<DateFilterInput>;\n  enrollmentMin?: Maybe<IntFilterInput>;\n  enrollmentMax?: Maybe<IntFilterInput>;\n  teachers?: Maybe<UserInfoFiltersInput>;\n  enrollments?: Maybe<EnrollmentFiltersInput>;\n  cvNeeded?: Maybe<BooleanFilterInput>;\n  portfolioNeeded?: Maybe<BooleanFilterInput>;\n  motivationalLetterNeeded?: Maybe<BooleanFilterInput>;\n  areas?: Maybe<AreaFiltersInput>;\n  slug?: Maybe<StringFilterInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  publishedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<CourseFiltersInput>>>;\n  or?: Maybe<Array<Maybe<CourseFiltersInput>>>;\n  not?: Maybe<CourseFiltersInput>;\n};\n\nexport type CourseInput = {\n  title?: Maybe<Scalars['String']>;\n  description?: Maybe<Scalars['String']>;\n  preconditionsNeeded?: Maybe<Scalars['Boolean']>;\n  price?: Maybe<Scalars['Int']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  enrollmentDeadline?: Maybe<Scalars['Date']>;\n  enrollmentMin?: Maybe<Scalars['Int']>;\n  enrollmentMax?: Maybe<Scalars['Int']>;\n  meetings?: Maybe<Array<Maybe<ComponentTimeMeetingInput>>>;\n  gallery?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  teachers?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  enrollments?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  cvNeeded?: Maybe<Scalars['Boolean']>;\n  portfolioNeeded?: Maybe<Scalars['Boolean']>;\n  motivationalLetterNeeded?: Maybe<Scalars['Boolean']>;\n  areas?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  slug?: Maybe<Scalars['String']>;\n  publishedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  title: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  preconditionsNeeded?: Maybe<Scalars['Boolean']>;\n  price?: Maybe<Scalars['Int']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  enrollmentDeadline?: Maybe<Scalars['Date']>;\n  enrollmentMin?: Maybe<Scalars['Int']>;\n  enrollmentMax?: Maybe<Scalars['Int']>;\n  meetings?: Maybe<Array<Maybe<ComponentTimeMeeting>>>;\n  gallery?: Maybe<UploadFileRelationResponseCollection>;\n  teachers?: Maybe<UserInfoRelationResponseCollection>;\n  enrollments?: Maybe<EnrollmentRelationResponseCollection>;\n  cvNeeded?: Maybe<Scalars['Boolean']>;\n  portfolioNeeded?: Maybe<Scalars['Boolean']>;\n  motivationalLetterNeeded?: Maybe<Scalars['Boolean']>;\n  areas?: Maybe<AreaRelationResponseCollection>;\n  slug?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  publishedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type CourseMeetingsArgs = {\n  filters?: Maybe<ComponentTimeMeetingFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type CourseGalleryArgs = {\n  filters?: Maybe<UploadFileFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type CourseTeachersArgs = {\n  filters?: Maybe<UserInfoFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type CourseEnrollmentsArgs = {\n  filters?: Maybe<EnrollmentFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type CourseAreasArgs = {\n  filters?: Maybe<AreaFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type CourseEntity = {\n  __typename?: 'CourseEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<Course>;\n};\n\nexport type CourseEntityResponse = {\n  __typename?: 'CourseEntityResponse';\n  data?: Maybe<CourseEntity>;\n};\n\nexport type CourseEntityResponseCollection = {\n  __typename?: 'CourseEntityResponseCollection';\n  data: Array<CourseEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type CourseRelationResponseCollection = {\n  __typename?: 'CourseRelationResponseCollection';\n  data: Array<CourseEntity>;\n};\n\nexport enum Enum_Enrollment_State {\n  AwaitingPayment = 'awaitingPayment',\n  Pending = 'pending',\n  Approved = 'approved',\n  Rejected = 'rejected'\n}\n\nexport type EnrollmentFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  owner?: Maybe<UsersPermissionsUserFiltersInput>;\n  state?: Maybe<StringFilterInput>;\n  cvUrl?: Maybe<StringFilterInput>;\n  portfolioUrl?: Maybe<StringFilterInput>;\n  motivationalLetter?: Maybe<StringFilterInput>;\n  course?: Maybe<CourseFiltersInput>;\n  phoneNumber?: Maybe<PhoneNumberFiltersInput>;\n  payment?: Maybe<PaymentFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<EnrollmentFiltersInput>>>;\n  or?: Maybe<Array<Maybe<EnrollmentFiltersInput>>>;\n  not?: Maybe<EnrollmentFiltersInput>;\n};\n\nexport type EnrollmentInput = {\n  owner?: Maybe<Scalars['ID']>;\n  state?: Maybe<Enum_Enrollment_State>;\n  cvUrl?: Maybe<Scalars['String']>;\n  portfolioUrl?: Maybe<Scalars['String']>;\n  motivationalLetter?: Maybe<Scalars['String']>;\n  course?: Maybe<Scalars['ID']>;\n  phoneNumber?: Maybe<Scalars['ID']>;\n  payment?: Maybe<Scalars['ID']>;\n};\n\nexport type Enrollment = {\n  __typename?: 'Enrollment';\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  state: Enum_Enrollment_State;\n  cvUrl?: Maybe<Scalars['String']>;\n  portfolioUrl?: Maybe<Scalars['String']>;\n  motivationalLetter?: Maybe<Scalars['String']>;\n  course?: Maybe<CourseEntityResponse>;\n  phoneNumber: PhoneNumberEntityResponse;\n  payment?: Maybe<PaymentEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type EnrollmentEntity = {\n  __typename?: 'EnrollmentEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<Enrollment>;\n};\n\nexport type EnrollmentEntityResponse = {\n  __typename?: 'EnrollmentEntityResponse';\n  data?: Maybe<EnrollmentEntity>;\n};\n\nexport type EnrollmentEntityResponseCollection = {\n  __typename?: 'EnrollmentEntityResponseCollection';\n  data: Array<EnrollmentEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type EnrollmentRelationResponseCollection = {\n  __typename?: 'EnrollmentRelationResponseCollection';\n  data: Array<EnrollmentEntity>;\n};\n\nexport type PaymentFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  hash?: Maybe<StringFilterInput>;\n  billing?: Maybe<BillingInfoFiltersInput>;\n  enrollment?: Maybe<EnrollmentFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<PaymentFiltersInput>>>;\n  or?: Maybe<Array<Maybe<PaymentFiltersInput>>>;\n  not?: Maybe<PaymentFiltersInput>;\n};\n\nexport type PaymentInput = {\n  hash?: Maybe<Scalars['String']>;\n  billing?: Maybe<Scalars['ID']>;\n  enrollment?: Maybe<Scalars['ID']>;\n};\n\nexport type Payment = {\n  __typename?: 'Payment';\n  hash: Scalars['String'];\n  billing?: Maybe<BillingInfoEntityResponse>;\n  enrollment?: Maybe<EnrollmentEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type PaymentEntity = {\n  __typename?: 'PaymentEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<Payment>;\n};\n\nexport type PaymentEntityResponse = {\n  __typename?: 'PaymentEntityResponse';\n  data?: Maybe<PaymentEntity>;\n};\n\nexport type PaymentEntityResponseCollection = {\n  __typename?: 'PaymentEntityResponseCollection';\n  data: Array<PaymentEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type PhoneNumberFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  number?: Maybe<StringFilterInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<PhoneNumberFiltersInput>>>;\n  or?: Maybe<Array<Maybe<PhoneNumberFiltersInput>>>;\n  not?: Maybe<PhoneNumberFiltersInput>;\n};\n\nexport type PhoneNumberInput = {\n  number?: Maybe<Scalars['String']>;\n};\n\nexport type PhoneNumber = {\n  __typename?: 'PhoneNumber';\n  number: Scalars['String'];\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type PhoneNumberEntity = {\n  __typename?: 'PhoneNumberEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<PhoneNumber>;\n};\n\nexport type PhoneNumberEntityResponse = {\n  __typename?: 'PhoneNumberEntityResponse';\n  data?: Maybe<PhoneNumberEntity>;\n};\n\nexport type PhoneNumberEntityResponseCollection = {\n  __typename?: 'PhoneNumberEntityResponseCollection';\n  data: Array<PhoneNumberEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UserInfoFiltersInput = {\n  id?: Maybe<IdFilterInput>;\n  surname?: Maybe<StringFilterInput>;\n  name?: Maybe<StringFilterInput>;\n  bio?: Maybe<StringFilterInput>;\n  coursesHeld?: Maybe<CourseFiltersInput>;\n  owner?: Maybe<UsersPermissionsUserFiltersInput>;\n  createdAt?: Maybe<DateTimeFilterInput>;\n  updatedAt?: Maybe<DateTimeFilterInput>;\n  and?: Maybe<Array<Maybe<UserInfoFiltersInput>>>;\n  or?: Maybe<Array<Maybe<UserInfoFiltersInput>>>;\n  not?: Maybe<UserInfoFiltersInput>;\n};\n\nexport type UserInfoInput = {\n  surname?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  bio?: Maybe<Scalars['String']>;\n  picture?: Maybe<Scalars['ID']>;\n  coursesHeld?: Maybe<Array<Maybe<Scalars['ID']>>>;\n  owner?: Maybe<Scalars['ID']>;\n};\n\nexport type UserInfo = {\n  __typename?: 'UserInfo';\n  surname?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  bio?: Maybe<Scalars['String']>;\n  picture?: Maybe<UploadFileEntityResponse>;\n  coursesHeld?: Maybe<CourseRelationResponseCollection>;\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type UserInfoCoursesHeldArgs = {\n  filters?: Maybe<CourseFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n  publicationState?: Maybe<PublicationState>;\n};\n\nexport type UserInfoEntity = {\n  __typename?: 'UserInfoEntity';\n  id?: Maybe<Scalars['ID']>;\n  attributes?: Maybe<UserInfo>;\n};\n\nexport type UserInfoEntityResponse = {\n  __typename?: 'UserInfoEntityResponse';\n  data?: Maybe<UserInfoEntity>;\n};\n\nexport type UserInfoEntityResponseCollection = {\n  __typename?: 'UserInfoEntityResponseCollection';\n  data: Array<UserInfoEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UserInfoRelationResponseCollection = {\n  __typename?: 'UserInfoRelationResponseCollection';\n  data: Array<UserInfoEntity>;\n};\n\nexport type GenericMorph = ComponentBillingCompany | ComponentBillingPerson | ComponentLocationAddress | ComponentTimeMeeting | ComponentTimeTimeSlot | UploadFile | I18NLocale | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser | Area | BillingInfo | Course | Enrollment | Payment | PhoneNumber | UserInfo;\n\nexport type FileInfoInput = {\n  name?: Maybe<Scalars['String']>;\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n};\n\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  id: Scalars['ID'];\n  username: Scalars['String'];\n  email?: Maybe<Scalars['String']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  role?: Maybe<UsersPermissionsMeRole>;\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  description?: Maybe<Scalars['String']>;\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  username: Scalars['String'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Scalars['String'];\n};\n\nexport type UsersPermissionsPasswordPayload = {\n  __typename?: 'UsersPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsCreateRolePayload = {\n  __typename?: 'UsersPermissionsCreateRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsUpdateRolePayload = {\n  __typename?: 'UsersPermissionsUpdateRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsDeleteRolePayload = {\n  __typename?: 'UsersPermissionsDeleteRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type PaginationArg = {\n  page?: Maybe<Scalars['Int']>;\n  pageSize?: Maybe<Scalars['Int']>;\n  start?: Maybe<Scalars['Int']>;\n  limit?: Maybe<Scalars['Int']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  uploadFile?: Maybe<UploadFileEntityResponse>;\n  uploadFiles?: Maybe<UploadFileEntityResponseCollection>;\n  i18NLocale?: Maybe<I18NLocaleEntityResponse>;\n  i18NLocales?: Maybe<I18NLocaleEntityResponseCollection>;\n  usersPermissionsRole?: Maybe<UsersPermissionsRoleEntityResponse>;\n  usersPermissionsRoles?: Maybe<UsersPermissionsRoleEntityResponseCollection>;\n  usersPermissionsUser?: Maybe<UsersPermissionsUserEntityResponse>;\n  usersPermissionsUsers?: Maybe<UsersPermissionsUserEntityResponseCollection>;\n  area?: Maybe<AreaEntityResponse>;\n  areas?: Maybe<AreaEntityResponseCollection>;\n  billingInfo?: Maybe<BillingInfoEntityResponse>;\n  billingInfos?: Maybe<BillingInfoEntityResponseCollection>;\n  course?: Maybe<CourseEntityResponse>;\n  courses?: Maybe<CourseEntityResponseCollection>;\n  enrollment?: Maybe<EnrollmentEntityResponse>;\n  enrollments?: Maybe<EnrollmentEntityResponseCollection>;\n  payment?: Maybe<PaymentEntityResponse>;\n  payments?: Maybe<PaymentEntityResponseCollection>;\n  phoneNumber?: Maybe<PhoneNumberEntityResponse>;\n  phoneNumbers?: Maybe<PhoneNumberEntityResponseCollection>;\n  userInfo?: Maybe<UserInfoEntityResponse>;\n  userInfos?: Maybe<UserInfoEntityResponseCollection>;\n  me?: Maybe<UsersPermissionsMe>;\n};\n\n\nexport type QueryUploadFileArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryUploadFilesArgs = {\n  filters?: Maybe<UploadFileFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryI18NLocaleArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryI18NLocalesArgs = {\n  filters?: Maybe<I18NLocaleFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUsersPermissionsRoleArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryUsersPermissionsRolesArgs = {\n  filters?: Maybe<UsersPermissionsRoleFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUsersPermissionsUserArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryUsersPermissionsUsersArgs = {\n  filters?: Maybe<UsersPermissionsUserFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryAreaArgs = {\n  id?: Maybe<Scalars['ID']>;\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type QueryAreasArgs = {\n  filters?: Maybe<AreaFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type QueryBillingInfoArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryBillingInfosArgs = {\n  filters?: Maybe<BillingInfoFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryCourseArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryCoursesArgs = {\n  filters?: Maybe<CourseFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n  publicationState?: Maybe<PublicationState>;\n};\n\n\nexport type QueryEnrollmentArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryEnrollmentsArgs = {\n  filters?: Maybe<EnrollmentFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryPaymentArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryPaymentsArgs = {\n  filters?: Maybe<PaymentFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryPhoneNumberArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryPhoneNumbersArgs = {\n  filters?: Maybe<PhoneNumberFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUserInfoArgs = {\n  id?: Maybe<Scalars['ID']>;\n};\n\n\nexport type QueryUserInfosArgs = {\n  filters?: Maybe<UserInfoFiltersInput>;\n  pagination?: Maybe<PaginationArg>;\n  sort?: Maybe<Array<Maybe<Scalars['String']>>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createUploadFile?: Maybe<UploadFileEntityResponse>;\n  updateUploadFile?: Maybe<UploadFileEntityResponse>;\n  deleteUploadFile?: Maybe<UploadFileEntityResponse>;\n  createArea?: Maybe<AreaEntityResponse>;\n  updateArea?: Maybe<AreaEntityResponse>;\n  deleteArea?: Maybe<AreaEntityResponse>;\n  createBillingInfo?: Maybe<BillingInfoEntityResponse>;\n  updateBillingInfo?: Maybe<BillingInfoEntityResponse>;\n  deleteBillingInfo?: Maybe<BillingInfoEntityResponse>;\n  createCourse?: Maybe<CourseEntityResponse>;\n  updateCourse?: Maybe<CourseEntityResponse>;\n  deleteCourse?: Maybe<CourseEntityResponse>;\n  createEnrollment?: Maybe<EnrollmentEntityResponse>;\n  updateEnrollment?: Maybe<EnrollmentEntityResponse>;\n  deleteEnrollment?: Maybe<EnrollmentEntityResponse>;\n  createPayment?: Maybe<PaymentEntityResponse>;\n  updatePayment?: Maybe<PaymentEntityResponse>;\n  deletePayment?: Maybe<PaymentEntityResponse>;\n  createPhoneNumber?: Maybe<PhoneNumberEntityResponse>;\n  updatePhoneNumber?: Maybe<PhoneNumberEntityResponse>;\n  deletePhoneNumber?: Maybe<PhoneNumberEntityResponse>;\n  createUserInfo?: Maybe<UserInfoEntityResponse>;\n  updateUserInfo?: Maybe<UserInfoEntityResponse>;\n  deleteUserInfo?: Maybe<UserInfoEntityResponse>;\n  upload: UploadFileEntityResponse;\n  multipleUpload: Array<Maybe<UploadFileEntityResponse>>;\n  updateFileInfo: UploadFileEntityResponse;\n  removeFile?: Maybe<UploadFileEntityResponse>;\n  createAreaLocalization?: Maybe<AreaEntityResponse>;\n  /** Create a new role */\n  createUsersPermissionsRole?: Maybe<UsersPermissionsCreateRolePayload>;\n  /** Update an existing role */\n  updateUsersPermissionsRole?: Maybe<UsersPermissionsUpdateRolePayload>;\n  /** Delete an existing role */\n  deleteUsersPermissionsRole?: Maybe<UsersPermissionsDeleteRolePayload>;\n  /** Create a new user */\n  createUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  /** Update an existing user */\n  updateUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  /** Update an existing user */\n  deleteUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  login: UsersPermissionsLoginPayload;\n  /** Register a user */\n  register: UsersPermissionsLoginPayload;\n  /** Request a reset password token */\n  forgotPassword?: Maybe<UsersPermissionsPasswordPayload>;\n  /** Reset user password. Confirm with a code (resetToken from forgotPassword) */\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  /** Confirm an email users email address */\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n};\n\n\nexport type MutationCreateUploadFileArgs = {\n  data: UploadFileInput;\n};\n\n\nexport type MutationUpdateUploadFileArgs = {\n  id: Scalars['ID'];\n  data: UploadFileInput;\n};\n\n\nexport type MutationDeleteUploadFileArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateAreaArgs = {\n  data: AreaInput;\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type MutationUpdateAreaArgs = {\n  id: Scalars['ID'];\n  data: AreaInput;\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type MutationDeleteAreaArgs = {\n  id: Scalars['ID'];\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type MutationCreateBillingInfoArgs = {\n  data: BillingInfoInput;\n};\n\n\nexport type MutationUpdateBillingInfoArgs = {\n  id: Scalars['ID'];\n  data: BillingInfoInput;\n};\n\n\nexport type MutationDeleteBillingInfoArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateCourseArgs = {\n  data: CourseInput;\n};\n\n\nexport type MutationUpdateCourseArgs = {\n  id: Scalars['ID'];\n  data: CourseInput;\n};\n\n\nexport type MutationDeleteCourseArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateEnrollmentArgs = {\n  data: EnrollmentInput;\n};\n\n\nexport type MutationUpdateEnrollmentArgs = {\n  id: Scalars['ID'];\n  data: EnrollmentInput;\n};\n\n\nexport type MutationDeleteEnrollmentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreatePaymentArgs = {\n  data: PaymentInput;\n};\n\n\nexport type MutationUpdatePaymentArgs = {\n  id: Scalars['ID'];\n  data: PaymentInput;\n};\n\n\nexport type MutationDeletePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreatePhoneNumberArgs = {\n  data: PhoneNumberInput;\n};\n\n\nexport type MutationUpdatePhoneNumberArgs = {\n  id: Scalars['ID'];\n  data: PhoneNumberInput;\n};\n\n\nexport type MutationDeletePhoneNumberArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateUserInfoArgs = {\n  data: UserInfoInput;\n};\n\n\nexport type MutationUpdateUserInfoArgs = {\n  id: Scalars['ID'];\n  data: UserInfoInput;\n};\n\n\nexport type MutationDeleteUserInfoArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  info?: Maybe<FileInfoInput>;\n  file: Scalars['Upload'];\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  refId?: Maybe<Scalars['ID']>;\n  ref?: Maybe<Scalars['String']>;\n  field?: Maybe<Scalars['String']>;\n  files: Array<Maybe<Scalars['Upload']>>;\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info?: Maybe<FileInfoInput>;\n};\n\n\nexport type MutationRemoveFileArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateAreaLocalizationArgs = {\n  id?: Maybe<Scalars['ID']>;\n  data?: Maybe<AreaInput>;\n  locale?: Maybe<Scalars['I18NLocaleCode']>;\n};\n\n\nexport type MutationCreateUsersPermissionsRoleArgs = {\n  data: UsersPermissionsRoleInput;\n};\n\n\nexport type MutationUpdateUsersPermissionsRoleArgs = {\n  id: Scalars['ID'];\n  data: UsersPermissionsRoleInput;\n};\n\n\nexport type MutationDeleteUsersPermissionsRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationCreateUsersPermissionsUserArgs = {\n  data: UsersPermissionsUserInput;\n};\n\n\nexport type MutationUpdateUsersPermissionsUserArgs = {\n  id: Scalars['ID'];\n  data: UsersPermissionsUserInput;\n};\n\n\nexport type MutationDeleteUsersPermissionsUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n  code: Scalars['String'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n","import * as t from \"../types\";\n\nexport function isBillingNeeded(c: t.Course): boolean {\n    return c.price > 0;\n}\n\nexport function isEvaluationNeeded(c: t.Course): boolean {\n    return c.cvNeeded || c.motivationalLetterNeeded || c.portfolioNeeded;\n}\n"],"names":["re","url","cf","urlSchema","yup","string","matches","cfSchema","emailSchema","email","thenReq","value","is","then","schema","required","otherwise","optional","thenUrlReq","thenNull","leValues","leSchema","object","lpValues","password","lpSchema","ueSchema","username","cValues","exists","user","name","surname","phone","cSchema","when","evValues","letterNeeded","letter","portfolioNeeded","portfolio","cvNeeded","cv","evSchema","enSchema","courseId","number","contacts","evaluationNeeded","evaluation","bMeValues","bMeSchema","bPersonValues","bPersonSchema","bCompanyValues","vat","sdi","bCompanySchema","bAddressValues","cap","town","street","province","bAddressSchema","bOptions","bValues","billingOption","me","person","company","address","bSchema","oneOf","PublicationState","Enum_Enrollment_State","isBillingNeeded","c","price","isEvaluationNeeded","motivationalLetterNeeded"],"mappings":"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"}