{"version":3,"file":"index.modern.js","sources":["../src/validation/regex.ts","../src/validation/schemas.ts","../src/types/types.ts","../src/types/typesFixes.ts","../src/types/httpMethod.ts","../src/request/types.ts","../src/request/request.ts","../src/join-request/index.ts","../src/routes/account/register.ts","../src/routes/account/user-exists.ts","../src/routes/account/login.ts","../src/routes/account/password/forgot.ts","../src/routes/account/password/reset.ts","../src/routes/account/me.ts","../src/routes/utils/contacts.ts","../src/routes/utils/evaluation.ts","../src/routes/utils/address.ts","../src/routes/utils/billing/owner.ts","../src/routes/utils/billing/person.ts","../src/routes/utils/billing/company.ts","../src/routes/utils/billing/index.ts","../src/routes/pay/execute.ts","../src/routes/pay/confirm.ts","../src/routes/admin/enrollments/update.ts","../src/routes/enroll/index.ts","../src/errors/index.ts","../src/helpers/course.ts","../src/helpers/payment.ts","../src/formatters/index.ts"],"sourcesContent":["export namespace Regex {\n\t// Fiscal codes\n\texport const vat = /^[0-9]{11}$/;\n\texport const sdi = /^([0-9]|[A-Z]){6,7}$/;\n\texport const cf =\n\t\t/^(?:[A-Z][AEIOU][AEIOUX]|[AEIOU]X{2}|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}(?:[\\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[15MR][\\dLMNP-V]|[26NS][0-8LMNP-U])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM]|[AC-EHLMPR-T][26NS][9V])|(?:[02468LNQSU][048LQU]|[13579MPRTV][26NS])B[26NS][9V])(?:[A-MZ][1-9MNP-V][\\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$/;\n\n\t// Location\n\texport const provincia = /^[A-Z]{2}$/;\n\texport const cap = /^[0-9]{5}$/;\n\n\t// Contacts\n\texport const pec = /^(.*)@(?:\\w*\\.)*pec(?:\\.\\w+)+$/;\n\texport const phone = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n\texport const url =\n\t\t/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/;\n}\n","import * as yup from \"yup\";\nimport { Regex as re } from \"./regex\";\n\nexport namespace Schemas {\n\t/**\n\t * Basic schemas\n\t */\n\n\texport const url = yup.string().lowercase().matches(re.url);\n\n\texport const cf = yup.string().uppercase().matches(re.cf);\n\texport const vat = yup.string().matches(re.vat);\n\texport const sdi = yup.string().uppercase().matches(re.sdi);\n\n\texport const phone = yup.string().matches(re.phone);\n\texport const email = yup.string().email();\n\texport const pec = email.matches(re.pec);\n\n\texport const provincia = yup.string().uppercase().matches(re.provincia);\n\texport const cap = yup.string().matches(re.cap);\n\n\t/**\n\t * Yup dynamic checks\n\t */\n\n\texport function thenReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenUrlReq(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => url.required(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t};\n\t}\n\n\texport function thenNull(value: boolean | string) {\n\t\treturn {\n\t\t\tis: value,\n\t\t\tthen: (schema: yup.AnySchema) => schema.nullable().optional(),\n\t\t\totherwise: (schema: yup.AnySchema) => schema.required(),\n\t\t};\n\t}\n\n\texport const nullOrReq = {\n\t\tis: (v: string | boolean | number) => v == true,\n\t\tthen: (s: yup.AnySchema) => s.nullable(),\n\t\totherwise: (s: yup.AnySchema) => s.required(),\n\t};\n}\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BillingDataDataDynamicZoneInput: any;\n  DateTime: any;\n  JSON: any;\n  Upload: any;\n};\n\nexport type BillingData = {\n  __typename?: 'BillingData';\n  address: ComponentSpaceAddress;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  data: Array<Maybe<BillingDataDataDynamicZone>>;\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  payment?: Maybe<PaymentEntityResponse>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type BillingDataDataDynamicZone = ComponentBillingCompany | ComponentBillingOwner | ComponentBillingPerson | Error;\n\nexport type BillingDataEntity = {\n  __typename?: 'BillingDataEntity';\n  attributes?: Maybe<BillingData>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type BillingDataEntityResponse = {\n  __typename?: 'BillingDataEntityResponse';\n  data?: Maybe<BillingDataEntity>;\n};\n\nexport type BillingDataEntityResponseCollection = {\n  __typename?: 'BillingDataEntityResponseCollection';\n  data: Array<BillingDataEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type BillingDataFiltersInput = {\n  address?: InputMaybe<ComponentSpaceAddressFiltersInput>;\n  and?: InputMaybe<Array<InputMaybe<BillingDataFiltersInput>>>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  not?: InputMaybe<BillingDataFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<BillingDataFiltersInput>>>;\n  owner?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  payment?: InputMaybe<PaymentFiltersInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type BillingDataInput = {\n  address?: InputMaybe<ComponentSpaceAddressInput>;\n  data?: InputMaybe<Array<Scalars['BillingDataDataDynamicZoneInput']>>;\n  owner?: InputMaybe<Scalars['ID']>;\n  payment?: InputMaybe<Scalars['ID']>;\n};\n\nexport type BillingDataRelationResponseCollection = {\n  __typename?: 'BillingDataRelationResponseCollection';\n  data: Array<BillingDataEntity>;\n};\n\nexport type BooleanFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['Boolean']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['Boolean']>>>;\n  contains?: InputMaybe<Scalars['Boolean']>;\n  containsi?: InputMaybe<Scalars['Boolean']>;\n  endsWith?: InputMaybe<Scalars['Boolean']>;\n  eq?: InputMaybe<Scalars['Boolean']>;\n  eqi?: InputMaybe<Scalars['Boolean']>;\n  gt?: InputMaybe<Scalars['Boolean']>;\n  gte?: InputMaybe<Scalars['Boolean']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['Boolean']>>>;\n  lt?: InputMaybe<Scalars['Boolean']>;\n  lte?: InputMaybe<Scalars['Boolean']>;\n  ne?: InputMaybe<Scalars['Boolean']>;\n  not?: InputMaybe<BooleanFilterInput>;\n  notContains?: InputMaybe<Scalars['Boolean']>;\n  notContainsi?: InputMaybe<Scalars['Boolean']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['Boolean']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['Boolean']>>>;\n  startsWith?: InputMaybe<Scalars['Boolean']>;\n};\n\nexport type ComponentBillingCompany = {\n  __typename?: 'ComponentBillingCompany';\n  certifiedEmail: Scalars['String'];\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  sdiCode: Scalars['String'];\n  vatNumber: Scalars['String'];\n};\n\nexport type ComponentBillingOwner = {\n  __typename?: 'ComponentBillingOwner';\n  fiscalCode: Scalars['String'];\n  id: Scalars['ID'];\n};\n\nexport type ComponentBillingPerson = {\n  __typename?: 'ComponentBillingPerson';\n  email: Scalars['String'];\n  fiscalCode: Scalars['String'];\n  id: Scalars['ID'];\n  name?: Maybe<Scalars['String']>;\n  surname: Scalars['String'];\n};\n\nexport type ComponentPeopleCredits = {\n  __typename?: 'ComponentPeopleCredits';\n  id: Scalars['ID'];\n  position?: Maybe<PositionEntityResponse>;\n  userInfo?: Maybe<UserInfoEntityResponse>;\n};\n\nexport type ComponentPeopleCreditsFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<ComponentPeopleCreditsFiltersInput>>>;\n  not?: InputMaybe<ComponentPeopleCreditsFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<ComponentPeopleCreditsFiltersInput>>>;\n  position?: InputMaybe<PositionFiltersInput>;\n  userInfo?: InputMaybe<UserInfoFiltersInput>;\n};\n\nexport type ComponentPeopleCreditsInput = {\n  id?: InputMaybe<Scalars['ID']>;\n  position?: InputMaybe<Scalars['ID']>;\n  userInfo?: InputMaybe<Scalars['ID']>;\n};\n\nexport type ComponentSpaceAddress = {\n  __typename?: 'ComponentSpaceAddress';\n  administrativeArea: Scalars['String'];\n  city: Scalars['String'];\n  country: Scalars['String'];\n  id: Scalars['ID'];\n  number: Scalars['String'];\n  postCode: Scalars['String'];\n  street: Scalars['String'];\n};\n\nexport type ComponentSpaceAddressFiltersInput = {\n  administrativeArea?: InputMaybe<StringFilterInput>;\n  and?: InputMaybe<Array<InputMaybe<ComponentSpaceAddressFiltersInput>>>;\n  city?: InputMaybe<StringFilterInput>;\n  country?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<ComponentSpaceAddressFiltersInput>;\n  number?: InputMaybe<StringFilterInput>;\n  or?: InputMaybe<Array<InputMaybe<ComponentSpaceAddressFiltersInput>>>;\n  postCode?: InputMaybe<StringFilterInput>;\n  street?: InputMaybe<StringFilterInput>;\n};\n\nexport type ComponentSpaceAddressInput = {\n  administrativeArea?: InputMaybe<Scalars['String']>;\n  city?: InputMaybe<Scalars['String']>;\n  country?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['ID']>;\n  number?: InputMaybe<Scalars['String']>;\n  postCode?: InputMaybe<Scalars['String']>;\n  street?: InputMaybe<Scalars['String']>;\n};\n\nexport type ComponentTimeMeetings = {\n  __typename?: 'ComponentTimeMeetings';\n  end: Scalars['DateTime'];\n  id: Scalars['ID'];\n  start: Scalars['DateTime'];\n};\n\nexport type ComponentTimeMeetingsFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<ComponentTimeMeetingsFiltersInput>>>;\n  end?: InputMaybe<DateTimeFilterInput>;\n  not?: InputMaybe<ComponentTimeMeetingsFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<ComponentTimeMeetingsFiltersInput>>>;\n  start?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type ComponentTimeMeetingsInput = {\n  end?: InputMaybe<Scalars['DateTime']>;\n  id?: InputMaybe<Scalars['ID']>;\n  start?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport type Course = {\n  __typename?: 'Course';\n  confirmed: Scalars['Boolean'];\n  createdAt?: Maybe<Scalars['DateTime']>;\n  cvNeeded: Scalars['Boolean'];\n  description: Scalars['String'];\n  enrollmentDeadline: Scalars['DateTime'];\n  enrollmentMax?: Maybe<Scalars['Int']>;\n  enrollmentMin?: Maybe<Scalars['Int']>;\n  enrollments?: Maybe<EnrollmentRelationResponseCollection>;\n  fields?: Maybe<FieldRelationResponseCollection>;\n  gallery?: Maybe<UploadFileRelationResponseCollection>;\n  meetings: Array<Maybe<ComponentTimeMeetings>>;\n  motivationalLetterNeeded: Scalars['Boolean'];\n  name: Scalars['String'];\n  places?: Maybe<PlaceRelationResponseCollection>;\n  portfolioNeeded: Scalars['Boolean'];\n  preconditionsNeeded: Scalars['Boolean'];\n  price: Scalars['Int'];\n  publishedAt?: Maybe<Scalars['DateTime']>;\n  roles: Array<Maybe<ComponentPeopleCredits>>;\n  slug: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type CourseEnrollmentsArgs = {\n  filters?: InputMaybe<EnrollmentFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type CourseFieldsArgs = {\n  filters?: InputMaybe<FieldFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type CourseGalleryArgs = {\n  filters?: InputMaybe<UploadFileFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type CourseMeetingsArgs = {\n  filters?: InputMaybe<ComponentTimeMeetingsFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type CoursePlacesArgs = {\n  filters?: InputMaybe<PlaceFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type CourseRolesArgs = {\n  filters?: InputMaybe<ComponentPeopleCreditsFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type CourseEntity = {\n  __typename?: 'CourseEntity';\n  attributes?: Maybe<Course>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type CourseEntityResponse = {\n  __typename?: 'CourseEntityResponse';\n  data?: Maybe<CourseEntity>;\n};\n\nexport type CourseEntityResponseCollection = {\n  __typename?: 'CourseEntityResponseCollection';\n  data: Array<CourseEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type CourseFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<CourseFiltersInput>>>;\n  confirmed?: InputMaybe<BooleanFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  cvNeeded?: InputMaybe<BooleanFilterInput>;\n  description?: InputMaybe<StringFilterInput>;\n  enrollmentDeadline?: InputMaybe<DateTimeFilterInput>;\n  enrollmentMax?: InputMaybe<IntFilterInput>;\n  enrollmentMin?: InputMaybe<IntFilterInput>;\n  enrollments?: InputMaybe<EnrollmentFiltersInput>;\n  fields?: InputMaybe<FieldFiltersInput>;\n  id?: InputMaybe<IdFilterInput>;\n  meetings?: InputMaybe<ComponentTimeMeetingsFiltersInput>;\n  motivationalLetterNeeded?: InputMaybe<BooleanFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<CourseFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<CourseFiltersInput>>>;\n  places?: InputMaybe<PlaceFiltersInput>;\n  portfolioNeeded?: InputMaybe<BooleanFilterInput>;\n  preconditionsNeeded?: InputMaybe<BooleanFilterInput>;\n  price?: InputMaybe<IntFilterInput>;\n  publishedAt?: InputMaybe<DateTimeFilterInput>;\n  roles?: InputMaybe<ComponentPeopleCreditsFiltersInput>;\n  slug?: InputMaybe<StringFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type CourseInput = {\n  confirmed?: InputMaybe<Scalars['Boolean']>;\n  cvNeeded?: InputMaybe<Scalars['Boolean']>;\n  description?: InputMaybe<Scalars['String']>;\n  enrollmentDeadline?: InputMaybe<Scalars['DateTime']>;\n  enrollmentMax?: InputMaybe<Scalars['Int']>;\n  enrollmentMin?: InputMaybe<Scalars['Int']>;\n  enrollments?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  fields?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  gallery?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  meetings?: InputMaybe<Array<InputMaybe<ComponentTimeMeetingsInput>>>;\n  motivationalLetterNeeded?: InputMaybe<Scalars['Boolean']>;\n  name?: InputMaybe<Scalars['String']>;\n  places?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  portfolioNeeded?: InputMaybe<Scalars['Boolean']>;\n  preconditionsNeeded?: InputMaybe<Scalars['Boolean']>;\n  price?: InputMaybe<Scalars['Int']>;\n  publishedAt?: InputMaybe<Scalars['DateTime']>;\n  roles?: InputMaybe<Array<InputMaybe<ComponentPeopleCreditsInput>>>;\n  slug?: InputMaybe<Scalars['String']>;\n};\n\nexport type CourseRelationResponseCollection = {\n  __typename?: 'CourseRelationResponseCollection';\n  data: Array<CourseEntity>;\n};\n\nexport type DateTimeFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;\n  contains?: InputMaybe<Scalars['DateTime']>;\n  containsi?: InputMaybe<Scalars['DateTime']>;\n  endsWith?: InputMaybe<Scalars['DateTime']>;\n  eq?: InputMaybe<Scalars['DateTime']>;\n  eqi?: InputMaybe<Scalars['DateTime']>;\n  gt?: InputMaybe<Scalars['DateTime']>;\n  gte?: InputMaybe<Scalars['DateTime']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;\n  lt?: InputMaybe<Scalars['DateTime']>;\n  lte?: InputMaybe<Scalars['DateTime']>;\n  ne?: InputMaybe<Scalars['DateTime']>;\n  not?: InputMaybe<DateTimeFilterInput>;\n  notContains?: InputMaybe<Scalars['DateTime']>;\n  notContainsi?: InputMaybe<Scalars['DateTime']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;\n  startsWith?: InputMaybe<Scalars['DateTime']>;\n};\n\nexport enum Enum_Enrollment_State {\n  Approved = 'approved',\n  AwaitingPayment = 'awaitingPayment',\n  Pending = 'pending',\n  Rejected = 'rejected'\n}\n\nexport type Enrollment = {\n  __typename?: 'Enrollment';\n  course?: Maybe<CourseEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  cvUrl?: Maybe<Scalars['String']>;\n  motivationalLetter?: Maybe<Scalars['String']>;\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  payment?: Maybe<PaymentEntityResponse>;\n  phoneNumber: Scalars['String'];\n  portfolioUrl?: Maybe<Scalars['String']>;\n  state: Enum_Enrollment_State;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type EnrollmentEntity = {\n  __typename?: 'EnrollmentEntity';\n  attributes?: Maybe<Enrollment>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type EnrollmentEntityResponse = {\n  __typename?: 'EnrollmentEntityResponse';\n  data?: Maybe<EnrollmentEntity>;\n};\n\nexport type EnrollmentEntityResponseCollection = {\n  __typename?: 'EnrollmentEntityResponseCollection';\n  data: Array<EnrollmentEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type EnrollmentFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<EnrollmentFiltersInput>>>;\n  course?: InputMaybe<CourseFiltersInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  cvUrl?: InputMaybe<StringFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  motivationalLetter?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<EnrollmentFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<EnrollmentFiltersInput>>>;\n  owner?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  payment?: InputMaybe<PaymentFiltersInput>;\n  phoneNumber?: InputMaybe<StringFilterInput>;\n  portfolioUrl?: InputMaybe<StringFilterInput>;\n  state?: InputMaybe<StringFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type EnrollmentInput = {\n  course?: InputMaybe<Scalars['ID']>;\n  cvUrl?: InputMaybe<Scalars['String']>;\n  motivationalLetter?: InputMaybe<Scalars['String']>;\n  owner?: InputMaybe<Scalars['ID']>;\n  payment?: InputMaybe<Scalars['ID']>;\n  phoneNumber?: InputMaybe<Scalars['String']>;\n  portfolioUrl?: InputMaybe<Scalars['String']>;\n  state?: InputMaybe<Enum_Enrollment_State>;\n};\n\nexport type EnrollmentRelationResponseCollection = {\n  __typename?: 'EnrollmentRelationResponseCollection';\n  data: Array<EnrollmentEntity>;\n};\n\nexport type Error = {\n  __typename?: 'Error';\n  code: Scalars['String'];\n  message?: Maybe<Scalars['String']>;\n};\n\nexport type Field = {\n  __typename?: 'Field';\n  courses?: Maybe<CourseRelationResponseCollection>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  name: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type FieldCoursesArgs = {\n  filters?: InputMaybe<CourseFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  publicationState?: InputMaybe<PublicationState>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type FieldEntity = {\n  __typename?: 'FieldEntity';\n  attributes?: Maybe<Field>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type FieldEntityResponse = {\n  __typename?: 'FieldEntityResponse';\n  data?: Maybe<FieldEntity>;\n};\n\nexport type FieldEntityResponseCollection = {\n  __typename?: 'FieldEntityResponseCollection';\n  data: Array<FieldEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type FieldFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<FieldFiltersInput>>>;\n  courses?: InputMaybe<CourseFiltersInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<FieldFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<FieldFiltersInput>>>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type FieldInput = {\n  courses?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type FieldRelationResponseCollection = {\n  __typename?: 'FieldRelationResponseCollection';\n  data: Array<FieldEntity>;\n};\n\nexport type FileInfoInput = {\n  alternativeText?: InputMaybe<Scalars['String']>;\n  caption?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type FloatFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;\n  contains?: InputMaybe<Scalars['Float']>;\n  containsi?: InputMaybe<Scalars['Float']>;\n  endsWith?: InputMaybe<Scalars['Float']>;\n  eq?: InputMaybe<Scalars['Float']>;\n  eqi?: InputMaybe<Scalars['Float']>;\n  gt?: InputMaybe<Scalars['Float']>;\n  gte?: InputMaybe<Scalars['Float']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;\n  lt?: InputMaybe<Scalars['Float']>;\n  lte?: InputMaybe<Scalars['Float']>;\n  ne?: InputMaybe<Scalars['Float']>;\n  not?: InputMaybe<FloatFilterInput>;\n  notContains?: InputMaybe<Scalars['Float']>;\n  notContainsi?: InputMaybe<Scalars['Float']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;\n  startsWith?: InputMaybe<Scalars['Float']>;\n};\n\nexport type GenericMorph = BillingData | ComponentBillingCompany | ComponentBillingOwner | ComponentBillingPerson | ComponentPeopleCredits | ComponentSpaceAddress | ComponentTimeMeetings | Course | Enrollment | Field | I18NLocale | Payment | Place | Position | UploadFile | UploadFolder | UserInfo | UsersPermissionsPermission | UsersPermissionsRole | UsersPermissionsUser;\n\nexport type I18NLocale = {\n  __typename?: 'I18NLocale';\n  code?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  name?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type I18NLocaleEntity = {\n  __typename?: 'I18NLocaleEntity';\n  attributes?: Maybe<I18NLocale>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type I18NLocaleEntityResponse = {\n  __typename?: 'I18NLocaleEntityResponse';\n  data?: Maybe<I18NLocaleEntity>;\n};\n\nexport type I18NLocaleEntityResponseCollection = {\n  __typename?: 'I18NLocaleEntityResponseCollection';\n  data: Array<I18NLocaleEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type I18NLocaleFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<I18NLocaleFiltersInput>>>;\n  code?: InputMaybe<StringFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<I18NLocaleFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<I18NLocaleFiltersInput>>>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type IdFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  contains?: InputMaybe<Scalars['ID']>;\n  containsi?: InputMaybe<Scalars['ID']>;\n  endsWith?: InputMaybe<Scalars['ID']>;\n  eq?: InputMaybe<Scalars['ID']>;\n  eqi?: InputMaybe<Scalars['ID']>;\n  gt?: InputMaybe<Scalars['ID']>;\n  gte?: InputMaybe<Scalars['ID']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  lt?: InputMaybe<Scalars['ID']>;\n  lte?: InputMaybe<Scalars['ID']>;\n  ne?: InputMaybe<Scalars['ID']>;\n  not?: InputMaybe<IdFilterInput>;\n  notContains?: InputMaybe<Scalars['ID']>;\n  notContainsi?: InputMaybe<Scalars['ID']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  startsWith?: InputMaybe<Scalars['ID']>;\n};\n\nexport type IntFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;\n  contains?: InputMaybe<Scalars['Int']>;\n  containsi?: InputMaybe<Scalars['Int']>;\n  endsWith?: InputMaybe<Scalars['Int']>;\n  eq?: InputMaybe<Scalars['Int']>;\n  eqi?: InputMaybe<Scalars['Int']>;\n  gt?: InputMaybe<Scalars['Int']>;\n  gte?: InputMaybe<Scalars['Int']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;\n  lt?: InputMaybe<Scalars['Int']>;\n  lte?: InputMaybe<Scalars['Int']>;\n  ne?: InputMaybe<Scalars['Int']>;\n  not?: InputMaybe<IntFilterInput>;\n  notContains?: InputMaybe<Scalars['Int']>;\n  notContainsi?: InputMaybe<Scalars['Int']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;\n  startsWith?: InputMaybe<Scalars['Int']>;\n};\n\nexport type JsonFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['JSON']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['JSON']>>>;\n  contains?: InputMaybe<Scalars['JSON']>;\n  containsi?: InputMaybe<Scalars['JSON']>;\n  endsWith?: InputMaybe<Scalars['JSON']>;\n  eq?: InputMaybe<Scalars['JSON']>;\n  eqi?: InputMaybe<Scalars['JSON']>;\n  gt?: InputMaybe<Scalars['JSON']>;\n  gte?: InputMaybe<Scalars['JSON']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['JSON']>>>;\n  lt?: InputMaybe<Scalars['JSON']>;\n  lte?: InputMaybe<Scalars['JSON']>;\n  ne?: InputMaybe<Scalars['JSON']>;\n  not?: InputMaybe<JsonFilterInput>;\n  notContains?: InputMaybe<Scalars['JSON']>;\n  notContainsi?: InputMaybe<Scalars['JSON']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['JSON']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['JSON']>>>;\n  startsWith?: InputMaybe<Scalars['JSON']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  /** Change user password. Confirm with the current password. */\n  changePassword?: Maybe<UsersPermissionsLoginPayload>;\n  createBillingData?: Maybe<BillingDataEntityResponse>;\n  createCourse?: Maybe<CourseEntityResponse>;\n  createEnrollment?: Maybe<EnrollmentEntityResponse>;\n  createField?: Maybe<FieldEntityResponse>;\n  createPayment?: Maybe<PaymentEntityResponse>;\n  createPlace?: Maybe<PlaceEntityResponse>;\n  createPosition?: Maybe<PositionEntityResponse>;\n  createUploadFile?: Maybe<UploadFileEntityResponse>;\n  createUploadFolder?: Maybe<UploadFolderEntityResponse>;\n  createUserInfo?: Maybe<UserInfoEntityResponse>;\n  /** Create a new role */\n  createUsersPermissionsRole?: Maybe<UsersPermissionsCreateRolePayload>;\n  /** Create a new user */\n  createUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  deleteBillingData?: Maybe<BillingDataEntityResponse>;\n  deleteCourse?: Maybe<CourseEntityResponse>;\n  deleteEnrollment?: Maybe<EnrollmentEntityResponse>;\n  deleteField?: Maybe<FieldEntityResponse>;\n  deletePayment?: Maybe<PaymentEntityResponse>;\n  deletePlace?: Maybe<PlaceEntityResponse>;\n  deletePosition?: Maybe<PositionEntityResponse>;\n  deleteUploadFile?: Maybe<UploadFileEntityResponse>;\n  deleteUploadFolder?: Maybe<UploadFolderEntityResponse>;\n  deleteUserInfo?: Maybe<UserInfoEntityResponse>;\n  /** Delete an existing role */\n  deleteUsersPermissionsRole?: Maybe<UsersPermissionsDeleteRolePayload>;\n  /** Delete an existing user */\n  deleteUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  /** Confirm an email users email address */\n  emailConfirmation?: Maybe<UsersPermissionsLoginPayload>;\n  /** Request a reset password token */\n  forgotPassword?: Maybe<UsersPermissionsPasswordPayload>;\n  login: UsersPermissionsLoginPayload;\n  multipleUpload: Array<Maybe<UploadFileEntityResponse>>;\n  /** Register a user */\n  register: UsersPermissionsLoginPayload;\n  removeFile?: Maybe<UploadFileEntityResponse>;\n  /** Reset user password. Confirm with a code (resetToken from forgotPassword) */\n  resetPassword?: Maybe<UsersPermissionsLoginPayload>;\n  updateBillingData?: Maybe<BillingDataEntityResponse>;\n  updateCourse?: Maybe<CourseEntityResponse>;\n  updateEnrollment?: Maybe<EnrollmentEntityResponse>;\n  updateField?: Maybe<FieldEntityResponse>;\n  updateFileInfo: UploadFileEntityResponse;\n  updatePayment?: Maybe<PaymentEntityResponse>;\n  updatePlace?: Maybe<PlaceEntityResponse>;\n  updatePosition?: Maybe<PositionEntityResponse>;\n  updateUploadFile?: Maybe<UploadFileEntityResponse>;\n  updateUploadFolder?: Maybe<UploadFolderEntityResponse>;\n  updateUserInfo?: Maybe<UserInfoEntityResponse>;\n  /** Update an existing role */\n  updateUsersPermissionsRole?: Maybe<UsersPermissionsUpdateRolePayload>;\n  /** Update an existing user */\n  updateUsersPermissionsUser: UsersPermissionsUserEntityResponse;\n  upload: UploadFileEntityResponse;\n};\n\n\nexport type MutationChangePasswordArgs = {\n  currentPassword: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n};\n\n\nexport type MutationCreateBillingDataArgs = {\n  data: BillingDataInput;\n};\n\n\nexport type MutationCreateCourseArgs = {\n  data: CourseInput;\n};\n\n\nexport type MutationCreateEnrollmentArgs = {\n  data: EnrollmentInput;\n};\n\n\nexport type MutationCreateFieldArgs = {\n  data: FieldInput;\n};\n\n\nexport type MutationCreatePaymentArgs = {\n  data: PaymentInput;\n};\n\n\nexport type MutationCreatePlaceArgs = {\n  data: PlaceInput;\n};\n\n\nexport type MutationCreatePositionArgs = {\n  data: PositionInput;\n};\n\n\nexport type MutationCreateUploadFileArgs = {\n  data: UploadFileInput;\n};\n\n\nexport type MutationCreateUploadFolderArgs = {\n  data: UploadFolderInput;\n};\n\n\nexport type MutationCreateUserInfoArgs = {\n  data: UserInfoInput;\n};\n\n\nexport type MutationCreateUsersPermissionsRoleArgs = {\n  data: UsersPermissionsRoleInput;\n};\n\n\nexport type MutationCreateUsersPermissionsUserArgs = {\n  data: UsersPermissionsUserInput;\n};\n\n\nexport type MutationDeleteBillingDataArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteCourseArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteEnrollmentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteFieldArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeletePaymentArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeletePlaceArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeletePositionArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUploadFileArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUploadFolderArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUserInfoArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUsersPermissionsRoleArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationDeleteUsersPermissionsUserArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationEmailConfirmationArgs = {\n  confirmation: Scalars['String'];\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  input: UsersPermissionsLoginInput;\n};\n\n\nexport type MutationMultipleUploadArgs = {\n  field?: InputMaybe<Scalars['String']>;\n  files: Array<InputMaybe<Scalars['Upload']>>;\n  ref?: InputMaybe<Scalars['String']>;\n  refId?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type MutationRegisterArgs = {\n  input: UsersPermissionsRegisterInput;\n};\n\n\nexport type MutationRemoveFileArgs = {\n  id: Scalars['ID'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  code: Scalars['String'];\n  password: Scalars['String'];\n  passwordConfirmation: Scalars['String'];\n};\n\n\nexport type MutationUpdateBillingDataArgs = {\n  data: BillingDataInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateCourseArgs = {\n  data: CourseInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateEnrollmentArgs = {\n  data: EnrollmentInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateFieldArgs = {\n  data: FieldInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateFileInfoArgs = {\n  id: Scalars['ID'];\n  info?: InputMaybe<FileInfoInput>;\n};\n\n\nexport type MutationUpdatePaymentArgs = {\n  data: PaymentInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdatePlaceArgs = {\n  data: PlaceInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdatePositionArgs = {\n  data: PositionInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateUploadFileArgs = {\n  data: UploadFileInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateUploadFolderArgs = {\n  data: UploadFolderInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateUserInfoArgs = {\n  data: UserInfoInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateUsersPermissionsRoleArgs = {\n  data: UsersPermissionsRoleInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUpdateUsersPermissionsUserArgs = {\n  data: UsersPermissionsUserInput;\n  id: Scalars['ID'];\n};\n\n\nexport type MutationUploadArgs = {\n  field?: InputMaybe<Scalars['String']>;\n  file: Scalars['Upload'];\n  info?: InputMaybe<FileInfoInput>;\n  ref?: InputMaybe<Scalars['String']>;\n  refId?: InputMaybe<Scalars['ID']>;\n};\n\nexport type Pagination = {\n  __typename?: 'Pagination';\n  page: Scalars['Int'];\n  pageCount: Scalars['Int'];\n  pageSize: Scalars['Int'];\n  total: Scalars['Int'];\n};\n\nexport type PaginationArg = {\n  limit?: InputMaybe<Scalars['Int']>;\n  page?: InputMaybe<Scalars['Int']>;\n  pageSize?: InputMaybe<Scalars['Int']>;\n  start?: InputMaybe<Scalars['Int']>;\n};\n\nexport type Payment = {\n  __typename?: 'Payment';\n  billingData?: Maybe<BillingDataEntityResponse>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  deadline: Scalars['DateTime'];\n  enrollment?: Maybe<EnrollmentEntityResponse>;\n  executed: Scalars['Boolean'];\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  uid: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type PaymentEntity = {\n  __typename?: 'PaymentEntity';\n  attributes?: Maybe<Payment>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type PaymentEntityResponse = {\n  __typename?: 'PaymentEntityResponse';\n  data?: Maybe<PaymentEntity>;\n};\n\nexport type PaymentEntityResponseCollection = {\n  __typename?: 'PaymentEntityResponseCollection';\n  data: Array<PaymentEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type PaymentFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<PaymentFiltersInput>>>;\n  billingData?: InputMaybe<BillingDataFiltersInput>;\n  confirmationCode?: InputMaybe<StringFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  deadline?: InputMaybe<DateTimeFilterInput>;\n  enrollment?: InputMaybe<EnrollmentFiltersInput>;\n  executed?: InputMaybe<BooleanFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  not?: InputMaybe<PaymentFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<PaymentFiltersInput>>>;\n  owner?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  uid?: InputMaybe<StringFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type PaymentInput = {\n  billingData?: InputMaybe<Scalars['ID']>;\n  confirmationCode?: InputMaybe<Scalars['String']>;\n  deadline?: InputMaybe<Scalars['DateTime']>;\n  enrollment?: InputMaybe<Scalars['ID']>;\n  executed?: InputMaybe<Scalars['Boolean']>;\n  owner?: InputMaybe<Scalars['ID']>;\n  uid?: InputMaybe<Scalars['String']>;\n};\n\nexport type PaymentRelationResponseCollection = {\n  __typename?: 'PaymentRelationResponseCollection';\n  data: Array<PaymentEntity>;\n};\n\nexport type Place = {\n  __typename?: 'Place';\n  address?: Maybe<ComponentSpaceAddress>;\n  courses?: Maybe<CourseRelationResponseCollection>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  name: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type PlaceCoursesArgs = {\n  filters?: InputMaybe<CourseFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  publicationState?: InputMaybe<PublicationState>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type PlaceEntity = {\n  __typename?: 'PlaceEntity';\n  attributes?: Maybe<Place>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type PlaceEntityResponse = {\n  __typename?: 'PlaceEntityResponse';\n  data?: Maybe<PlaceEntity>;\n};\n\nexport type PlaceEntityResponseCollection = {\n  __typename?: 'PlaceEntityResponseCollection';\n  data: Array<PlaceEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type PlaceFiltersInput = {\n  address?: InputMaybe<ComponentSpaceAddressFiltersInput>;\n  and?: InputMaybe<Array<InputMaybe<PlaceFiltersInput>>>;\n  courses?: InputMaybe<CourseFiltersInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<PlaceFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<PlaceFiltersInput>>>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type PlaceInput = {\n  address?: InputMaybe<ComponentSpaceAddressInput>;\n  courses?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport type PlaceRelationResponseCollection = {\n  __typename?: 'PlaceRelationResponseCollection';\n  data: Array<PlaceEntity>;\n};\n\nexport type Position = {\n  __typename?: 'Position';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  name: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type PositionEntity = {\n  __typename?: 'PositionEntity';\n  attributes?: Maybe<Position>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type PositionEntityResponse = {\n  __typename?: 'PositionEntityResponse';\n  data?: Maybe<PositionEntity>;\n};\n\nexport type PositionEntityResponseCollection = {\n  __typename?: 'PositionEntityResponseCollection';\n  data: Array<PositionEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type PositionFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<PositionFiltersInput>>>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<PositionFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<PositionFiltersInput>>>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type PositionInput = {\n  name?: InputMaybe<Scalars['String']>;\n};\n\nexport enum PublicationState {\n  Live = 'LIVE',\n  Preview = 'PREVIEW'\n}\n\nexport type Query = {\n  __typename?: 'Query';\n  billingData?: Maybe<BillingDataEntityResponse>;\n  billingDatas?: Maybe<BillingDataEntityResponseCollection>;\n  course?: Maybe<CourseEntityResponse>;\n  courses?: Maybe<CourseEntityResponseCollection>;\n  enrollment?: Maybe<EnrollmentEntityResponse>;\n  enrollments?: Maybe<EnrollmentEntityResponseCollection>;\n  field?: Maybe<FieldEntityResponse>;\n  fields?: Maybe<FieldEntityResponseCollection>;\n  i18NLocale?: Maybe<I18NLocaleEntityResponse>;\n  i18NLocales?: Maybe<I18NLocaleEntityResponseCollection>;\n  me?: Maybe<UsersPermissionsMe>;\n  payment?: Maybe<PaymentEntityResponse>;\n  payments?: Maybe<PaymentEntityResponseCollection>;\n  place?: Maybe<PlaceEntityResponse>;\n  places?: Maybe<PlaceEntityResponseCollection>;\n  position?: Maybe<PositionEntityResponse>;\n  positions?: Maybe<PositionEntityResponseCollection>;\n  uploadFile?: Maybe<UploadFileEntityResponse>;\n  uploadFiles?: Maybe<UploadFileEntityResponseCollection>;\n  uploadFolder?: Maybe<UploadFolderEntityResponse>;\n  uploadFolders?: Maybe<UploadFolderEntityResponseCollection>;\n  userInfo?: Maybe<UserInfoEntityResponse>;\n  userInfos?: Maybe<UserInfoEntityResponseCollection>;\n  usersPermissionsRole?: Maybe<UsersPermissionsRoleEntityResponse>;\n  usersPermissionsRoles?: Maybe<UsersPermissionsRoleEntityResponseCollection>;\n  usersPermissionsUser?: Maybe<UsersPermissionsUserEntityResponse>;\n  usersPermissionsUsers?: Maybe<UsersPermissionsUserEntityResponseCollection>;\n};\n\n\nexport type QueryBillingDataArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryBillingDatasArgs = {\n  filters?: InputMaybe<BillingDataFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryCourseArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryCoursesArgs = {\n  filters?: InputMaybe<CourseFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  publicationState?: InputMaybe<PublicationState>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryEnrollmentArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryEnrollmentsArgs = {\n  filters?: InputMaybe<EnrollmentFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryFieldArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryFieldsArgs = {\n  filters?: InputMaybe<FieldFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryI18NLocaleArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryI18NLocalesArgs = {\n  filters?: InputMaybe<I18NLocaleFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryPaymentArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryPaymentsArgs = {\n  filters?: InputMaybe<PaymentFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryPlaceArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryPlacesArgs = {\n  filters?: InputMaybe<PlaceFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryPositionArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryPositionsArgs = {\n  filters?: InputMaybe<PositionFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUploadFileArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryUploadFilesArgs = {\n  filters?: InputMaybe<UploadFileFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUploadFolderArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryUploadFoldersArgs = {\n  filters?: InputMaybe<UploadFolderFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUserInfoArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryUserInfosArgs = {\n  filters?: InputMaybe<UserInfoFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUsersPermissionsRoleArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryUsersPermissionsRolesArgs = {\n  filters?: InputMaybe<UsersPermissionsRoleFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type QueryUsersPermissionsUserArgs = {\n  id?: InputMaybe<Scalars['ID']>;\n};\n\n\nexport type QueryUsersPermissionsUsersArgs = {\n  filters?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type ResponseCollectionMeta = {\n  __typename?: 'ResponseCollectionMeta';\n  pagination: Pagination;\n};\n\nexport type StringFilterInput = {\n  and?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  between?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  contains?: InputMaybe<Scalars['String']>;\n  containsi?: InputMaybe<Scalars['String']>;\n  endsWith?: InputMaybe<Scalars['String']>;\n  eq?: InputMaybe<Scalars['String']>;\n  eqi?: InputMaybe<Scalars['String']>;\n  gt?: InputMaybe<Scalars['String']>;\n  gte?: InputMaybe<Scalars['String']>;\n  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  lt?: InputMaybe<Scalars['String']>;\n  lte?: InputMaybe<Scalars['String']>;\n  ne?: InputMaybe<Scalars['String']>;\n  not?: InputMaybe<StringFilterInput>;\n  notContains?: InputMaybe<Scalars['String']>;\n  notContainsi?: InputMaybe<Scalars['String']>;\n  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  notNull?: InputMaybe<Scalars['Boolean']>;\n  null?: InputMaybe<Scalars['Boolean']>;\n  or?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n  startsWith?: InputMaybe<Scalars['String']>;\n};\n\nexport type UploadFile = {\n  __typename?: 'UploadFile';\n  alternativeText?: Maybe<Scalars['String']>;\n  caption?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  ext?: Maybe<Scalars['String']>;\n  formats?: Maybe<Scalars['JSON']>;\n  hash: Scalars['String'];\n  height?: Maybe<Scalars['Int']>;\n  mime: Scalars['String'];\n  name: Scalars['String'];\n  previewUrl?: Maybe<Scalars['String']>;\n  provider: Scalars['String'];\n  provider_metadata?: Maybe<Scalars['JSON']>;\n  related?: Maybe<Array<Maybe<GenericMorph>>>;\n  size: Scalars['Float'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  url: Scalars['String'];\n  width?: Maybe<Scalars['Int']>;\n};\n\nexport type UploadFileEntity = {\n  __typename?: 'UploadFileEntity';\n  attributes?: Maybe<UploadFile>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UploadFileEntityResponse = {\n  __typename?: 'UploadFileEntityResponse';\n  data?: Maybe<UploadFileEntity>;\n};\n\nexport type UploadFileEntityResponseCollection = {\n  __typename?: 'UploadFileEntityResponseCollection';\n  data: Array<UploadFileEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UploadFileFiltersInput = {\n  alternativeText?: InputMaybe<StringFilterInput>;\n  and?: InputMaybe<Array<InputMaybe<UploadFileFiltersInput>>>;\n  caption?: InputMaybe<StringFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  ext?: InputMaybe<StringFilterInput>;\n  folder?: InputMaybe<UploadFolderFiltersInput>;\n  folderPath?: InputMaybe<StringFilterInput>;\n  formats?: InputMaybe<JsonFilterInput>;\n  hash?: InputMaybe<StringFilterInput>;\n  height?: InputMaybe<IntFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  mime?: InputMaybe<StringFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<UploadFileFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UploadFileFiltersInput>>>;\n  previewUrl?: InputMaybe<StringFilterInput>;\n  provider?: InputMaybe<StringFilterInput>;\n  provider_metadata?: InputMaybe<JsonFilterInput>;\n  size?: InputMaybe<FloatFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n  url?: InputMaybe<StringFilterInput>;\n  width?: InputMaybe<IntFilterInput>;\n};\n\nexport type UploadFileInput = {\n  alternativeText?: InputMaybe<Scalars['String']>;\n  caption?: InputMaybe<Scalars['String']>;\n  ext?: InputMaybe<Scalars['String']>;\n  folder?: InputMaybe<Scalars['ID']>;\n  folderPath?: InputMaybe<Scalars['String']>;\n  formats?: InputMaybe<Scalars['JSON']>;\n  hash?: InputMaybe<Scalars['String']>;\n  height?: InputMaybe<Scalars['Int']>;\n  mime?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  previewUrl?: InputMaybe<Scalars['String']>;\n  provider?: InputMaybe<Scalars['String']>;\n  provider_metadata?: InputMaybe<Scalars['JSON']>;\n  size?: InputMaybe<Scalars['Float']>;\n  url?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['Int']>;\n};\n\nexport type UploadFileRelationResponseCollection = {\n  __typename?: 'UploadFileRelationResponseCollection';\n  data: Array<UploadFileEntity>;\n};\n\nexport type UploadFolder = {\n  __typename?: 'UploadFolder';\n  children?: Maybe<UploadFolderRelationResponseCollection>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  files?: Maybe<UploadFileRelationResponseCollection>;\n  name: Scalars['String'];\n  parent?: Maybe<UploadFolderEntityResponse>;\n  path: Scalars['String'];\n  pathId: Scalars['Int'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\n\nexport type UploadFolderChildrenArgs = {\n  filters?: InputMaybe<UploadFolderFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type UploadFolderFilesArgs = {\n  filters?: InputMaybe<UploadFileFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type UploadFolderEntity = {\n  __typename?: 'UploadFolderEntity';\n  attributes?: Maybe<UploadFolder>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UploadFolderEntityResponse = {\n  __typename?: 'UploadFolderEntityResponse';\n  data?: Maybe<UploadFolderEntity>;\n};\n\nexport type UploadFolderEntityResponseCollection = {\n  __typename?: 'UploadFolderEntityResponseCollection';\n  data: Array<UploadFolderEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UploadFolderFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<UploadFolderFiltersInput>>>;\n  children?: InputMaybe<UploadFolderFiltersInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  files?: InputMaybe<UploadFileFiltersInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<UploadFolderFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UploadFolderFiltersInput>>>;\n  parent?: InputMaybe<UploadFolderFiltersInput>;\n  path?: InputMaybe<StringFilterInput>;\n  pathId?: InputMaybe<IntFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type UploadFolderInput = {\n  children?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  files?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  name?: InputMaybe<Scalars['String']>;\n  parent?: InputMaybe<Scalars['ID']>;\n  path?: InputMaybe<Scalars['String']>;\n  pathId?: InputMaybe<Scalars['Int']>;\n};\n\nexport type UploadFolderRelationResponseCollection = {\n  __typename?: 'UploadFolderRelationResponseCollection';\n  data: Array<UploadFolderEntity>;\n};\n\nexport type UserInfo = {\n  __typename?: 'UserInfo';\n  bio?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  name: Scalars['String'];\n  owner?: Maybe<UsersPermissionsUserEntityResponse>;\n  picture?: Maybe<UploadFileEntityResponse>;\n  surname: Scalars['String'];\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type UserInfoEntity = {\n  __typename?: 'UserInfoEntity';\n  attributes?: Maybe<UserInfo>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UserInfoEntityResponse = {\n  __typename?: 'UserInfoEntityResponse';\n  data?: Maybe<UserInfoEntity>;\n};\n\nexport type UserInfoEntityResponseCollection = {\n  __typename?: 'UserInfoEntityResponseCollection';\n  data: Array<UserInfoEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UserInfoFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<UserInfoFiltersInput>>>;\n  bio?: InputMaybe<StringFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<UserInfoFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UserInfoFiltersInput>>>;\n  owner?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  surname?: InputMaybe<StringFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type UserInfoInput = {\n  bio?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  owner?: InputMaybe<Scalars['ID']>;\n  picture?: InputMaybe<Scalars['ID']>;\n  surname?: InputMaybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsCreateRolePayload = {\n  __typename?: 'UsersPermissionsCreateRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsDeleteRolePayload = {\n  __typename?: 'UsersPermissionsDeleteRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsLoginInput = {\n  identifier: Scalars['String'];\n  password: Scalars['String'];\n  provider?: Scalars['String'];\n};\n\nexport type UsersPermissionsLoginPayload = {\n  __typename?: 'UsersPermissionsLoginPayload';\n  jwt?: Maybe<Scalars['String']>;\n  user: UsersPermissionsMe;\n};\n\nexport type UsersPermissionsMe = {\n  __typename?: 'UsersPermissionsMe';\n  blocked?: Maybe<Scalars['Boolean']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  email?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  role?: Maybe<UsersPermissionsMeRole>;\n  username: Scalars['String'];\n};\n\nexport type UsersPermissionsMeRole = {\n  __typename?: 'UsersPermissionsMeRole';\n  description?: Maybe<Scalars['String']>;\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  type?: Maybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsPasswordPayload = {\n  __typename?: 'UsersPermissionsPasswordPayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsPermission = {\n  __typename?: 'UsersPermissionsPermission';\n  action: Scalars['String'];\n  createdAt?: Maybe<Scalars['DateTime']>;\n  role?: Maybe<UsersPermissionsRoleEntityResponse>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n};\n\nexport type UsersPermissionsPermissionEntity = {\n  __typename?: 'UsersPermissionsPermissionEntity';\n  attributes?: Maybe<UsersPermissionsPermission>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UsersPermissionsPermissionFiltersInput = {\n  action?: InputMaybe<StringFilterInput>;\n  and?: InputMaybe<Array<InputMaybe<UsersPermissionsPermissionFiltersInput>>>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  not?: InputMaybe<UsersPermissionsPermissionFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UsersPermissionsPermissionFiltersInput>>>;\n  role?: InputMaybe<UsersPermissionsRoleFiltersInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n};\n\nexport type UsersPermissionsPermissionRelationResponseCollection = {\n  __typename?: 'UsersPermissionsPermissionRelationResponseCollection';\n  data: Array<UsersPermissionsPermissionEntity>;\n};\n\nexport type UsersPermissionsRegisterInput = {\n  email: Scalars['String'];\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\nexport type UsersPermissionsRole = {\n  __typename?: 'UsersPermissionsRole';\n  createdAt?: Maybe<Scalars['DateTime']>;\n  description?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  permissions?: Maybe<UsersPermissionsPermissionRelationResponseCollection>;\n  type?: Maybe<Scalars['String']>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  users?: Maybe<UsersPermissionsUserRelationResponseCollection>;\n};\n\n\nexport type UsersPermissionsRolePermissionsArgs = {\n  filters?: InputMaybe<UsersPermissionsPermissionFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type UsersPermissionsRoleUsersArgs = {\n  filters?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type UsersPermissionsRoleEntity = {\n  __typename?: 'UsersPermissionsRoleEntity';\n  attributes?: Maybe<UsersPermissionsRole>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UsersPermissionsRoleEntityResponse = {\n  __typename?: 'UsersPermissionsRoleEntityResponse';\n  data?: Maybe<UsersPermissionsRoleEntity>;\n};\n\nexport type UsersPermissionsRoleEntityResponseCollection = {\n  __typename?: 'UsersPermissionsRoleEntityResponseCollection';\n  data: Array<UsersPermissionsRoleEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UsersPermissionsRoleFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<UsersPermissionsRoleFiltersInput>>>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  description?: InputMaybe<StringFilterInput>;\n  id?: InputMaybe<IdFilterInput>;\n  name?: InputMaybe<StringFilterInput>;\n  not?: InputMaybe<UsersPermissionsRoleFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UsersPermissionsRoleFiltersInput>>>;\n  permissions?: InputMaybe<UsersPermissionsPermissionFiltersInput>;\n  type?: InputMaybe<StringFilterInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n  users?: InputMaybe<UsersPermissionsUserFiltersInput>;\n};\n\nexport type UsersPermissionsRoleInput = {\n  description?: InputMaybe<Scalars['String']>;\n  name?: InputMaybe<Scalars['String']>;\n  permissions?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  type?: InputMaybe<Scalars['String']>;\n  users?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n};\n\nexport type UsersPermissionsUpdateRolePayload = {\n  __typename?: 'UsersPermissionsUpdateRolePayload';\n  ok: Scalars['Boolean'];\n};\n\nexport type UsersPermissionsUser = {\n  __typename?: 'UsersPermissionsUser';\n  billingDatas?: Maybe<BillingDataRelationResponseCollection>;\n  blocked?: Maybe<Scalars['Boolean']>;\n  confirmed?: Maybe<Scalars['Boolean']>;\n  createdAt?: Maybe<Scalars['DateTime']>;\n  email: Scalars['String'];\n  enrollments?: Maybe<EnrollmentRelationResponseCollection>;\n  info?: Maybe<UserInfoEntityResponse>;\n  payments?: Maybe<PaymentRelationResponseCollection>;\n  provider?: Maybe<Scalars['String']>;\n  role?: Maybe<UsersPermissionsRoleEntityResponse>;\n  updatedAt?: Maybe<Scalars['DateTime']>;\n  username: Scalars['String'];\n};\n\n\nexport type UsersPermissionsUserBillingDatasArgs = {\n  filters?: InputMaybe<BillingDataFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type UsersPermissionsUserEnrollmentsArgs = {\n  filters?: InputMaybe<EnrollmentFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\n\nexport type UsersPermissionsUserPaymentsArgs = {\n  filters?: InputMaybe<PaymentFiltersInput>;\n  pagination?: InputMaybe<PaginationArg>;\n  sort?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;\n};\n\nexport type UsersPermissionsUserEntity = {\n  __typename?: 'UsersPermissionsUserEntity';\n  attributes?: Maybe<UsersPermissionsUser>;\n  id?: Maybe<Scalars['ID']>;\n};\n\nexport type UsersPermissionsUserEntityResponse = {\n  __typename?: 'UsersPermissionsUserEntityResponse';\n  data?: Maybe<UsersPermissionsUserEntity>;\n};\n\nexport type UsersPermissionsUserEntityResponseCollection = {\n  __typename?: 'UsersPermissionsUserEntityResponseCollection';\n  data: Array<UsersPermissionsUserEntity>;\n  meta: ResponseCollectionMeta;\n};\n\nexport type UsersPermissionsUserFiltersInput = {\n  and?: InputMaybe<Array<InputMaybe<UsersPermissionsUserFiltersInput>>>;\n  billingDatas?: InputMaybe<BillingDataFiltersInput>;\n  blocked?: InputMaybe<BooleanFilterInput>;\n  confirmationToken?: InputMaybe<StringFilterInput>;\n  confirmed?: InputMaybe<BooleanFilterInput>;\n  createdAt?: InputMaybe<DateTimeFilterInput>;\n  email?: InputMaybe<StringFilterInput>;\n  enrollments?: InputMaybe<EnrollmentFiltersInput>;\n  id?: InputMaybe<IdFilterInput>;\n  info?: InputMaybe<UserInfoFiltersInput>;\n  not?: InputMaybe<UsersPermissionsUserFiltersInput>;\n  or?: InputMaybe<Array<InputMaybe<UsersPermissionsUserFiltersInput>>>;\n  password?: InputMaybe<StringFilterInput>;\n  payments?: InputMaybe<PaymentFiltersInput>;\n  provider?: InputMaybe<StringFilterInput>;\n  resetPasswordToken?: InputMaybe<StringFilterInput>;\n  role?: InputMaybe<UsersPermissionsRoleFiltersInput>;\n  updatedAt?: InputMaybe<DateTimeFilterInput>;\n  username?: InputMaybe<StringFilterInput>;\n};\n\nexport type UsersPermissionsUserInput = {\n  billingDatas?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  blocked?: InputMaybe<Scalars['Boolean']>;\n  confirmationToken?: InputMaybe<Scalars['String']>;\n  confirmed?: InputMaybe<Scalars['Boolean']>;\n  email?: InputMaybe<Scalars['String']>;\n  enrollments?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  info?: InputMaybe<Scalars['ID']>;\n  password?: InputMaybe<Scalars['String']>;\n  payments?: InputMaybe<Array<InputMaybe<Scalars['ID']>>>;\n  provider?: InputMaybe<Scalars['String']>;\n  resetPasswordToken?: InputMaybe<Scalars['String']>;\n  role?: InputMaybe<Scalars['ID']>;\n  username?: InputMaybe<Scalars['String']>;\n};\n\nexport type UsersPermissionsUserRelationResponseCollection = {\n  __typename?: 'UsersPermissionsUserRelationResponseCollection';\n  data: Array<UsersPermissionsUserEntity>;\n};\n","import { Enum_Enrollment_State, Payment } from \"./types\";\n\n/**\n * Adds ID to any interface\n */\n\nexport type ID<T> = T & { id: string };\n\n/**\n * Cleans a component interface from keys: __typename and ID\n */\n\nexport type CleanComp<T> = Omit<T, \"id\" | \"__typename\">;\n\n/**\n * Adds confirmation code to Payment keys\n */\n\nexport interface PaymentC extends Payment {\n\tconfirmationCode: string;\n}\n\n/**\n * Collects useful payment data to display to the user\n */\n\nexport interface PaymentDetails {\n\tcategory: string;\n\ttitle: string;\n\tprice: number;\n\texecuted: boolean;\n\tdeadline: string;\n\texpired: boolean;\n\towner: {\n\t\tname: string;\n\t\tsurname: string;\n\t\temail: string;\n\t};\n}\n\nexport enum PaymentCategories {\n\tcourse = \"course\",\n}\n\n/**\n * Enrollment states, as list\n */\n\nexport const EnrollmentStates = Object.values(Enum_Enrollment_State);\n\n// import {\n// \tUsersPermissionsMe,\n// \tComponentLocationAddress,\n// \tBillingInfoDataDynamicZone,\n// \tPayment,\n// } from \"./types\";\n\n// export type Comp<T> = Partial<T> & { __component: string };\n\n// /**\n//  * Login\n//  */\n\n// export interface LoginResponse {\n// \tjwt?: string;\n// \tuser: UsersPermissionsMe;\n// }\n\n// /**\n//  * Payment\n//  */\n\n// export interface PaymentC extends Payment {\n// \tconfirmCode: string;\n// }\n\n// export interface PaymentBillingInfo {\n// \taddress: ComponentLocationAddress;\n// \tdata: Comp<BillingInfoDataDynamicZone>;\n// }\n\n// /**\n//  * Billing options\n//  */\n\n// // Lista dei componenti per la zona dinamica\n// // Reference: strapi-backend/src/api/billing-info/content-types/billing-info/schema.json\n// export enum BillingOptionsComponents {\n// \tCompany = \"billing.company\",\n// \tPerson = \"billing.person\",\n// \tMe = \"billing.me\",\n// }\n\n// /**\n//  * Roles\n//  */\n\n// export enum UserPermissionRoles {\n// \tPublic = \"public\",\n// \tAuthenticated = \"authenticated\",\n// \tAdminEnrollments = \"admin_enrollments\",\n// \tAdminTools = \"admin_tools\",\n// }\n","export enum HTTPMethod {\n\tCONNECT = \"CONNECT\",\n\tDELETE = \"DELETE\",\n\tGET = \"GET\",\n\tHEAD = \"HEAD\",\n\tOPTIONS = \"OPTIONS\",\n\tPATCH = \"PATCH\",\n\tPOST = \"POST\",\n\tPUT = \"PUT\",\n\tTRACE = \"TRACE\",\n}\n","/**\n * Type utilities\n */\n\nexport type Fetch = (\n    input: RequestInfo | URL,\n    init?: RequestInit | undefined\n) => Promise<Response>;\n\nexport enum HTTPMethod {\n    CONNECT = \"CONNECT\",\n    DELETE = \"DELETE\",\n    GET = \"GET\",\n    HEAD = \"HEAD\",\n    OPTIONS = \"OPTIONS\",\n    PATCH = \"PATCH\",\n    POST = \"POST\",\n    PUT = \"PUT\",\n    TRACE = \"TRACE\",\n}\n\n/**\n * \"Send\" function definitions\n */\n\nexport interface Args {\n    method: HTTPMethod;\n    path: string;\n    data?: Record<string, unknown>;\n    auth?: string;\n    fetchImpl?: Fetch;\n}\n\nexport interface Options {\n    method: HTTPMethod;\n    headers: {\n        \"Content-Type\"?: string;\n        Authorization?: string;\n    };\n    body?: string;\n}\n\nexport interface Res<T, E> {\n    ok: boolean;\n    status: number;\n    statusText: string;\n    data: T | null;\n    error: E | null;\n}\n","import { HTTPMethod, Options, Args, Res } from \"./types\";\n\n// Send function\n\nexport async function send<T, E = any>({\n    method,\n    path,\n    data,\n    auth,\n    fetchImpl = fetch,\n}: Args): Promise<Res<T, E>> {\n    const opts: Options = { method, headers: {} };\n\n    if (data && method != HTTPMethod.GET) {\n        opts.headers[\"Content-Type\"] = \"application/json\";\n        opts.body = JSON.stringify(data);\n    }\n\n    if (auth) {\n        opts.headers[\"Authorization\"] = auth;\n    }\n\n    const res = await fetchImpl(path, opts);\n\n    try {\n        const data = await res.json();\n        return {\n            ok: res.ok,\n            status: res.status,\n            statusText: res.statusText,\n            data: res.ok ? data : null,\n            error: !res.ok ? data : null,\n        };\n    } catch (e) {\n        throw new Error(`Failed to parse response: ${e}`);\n    }\n}\n","import { request as req, Request as Req } from \"../request\";\n\nexport const backendURL = \"http://localhost:1337/api\";\n\nexport type StrapiError = {\n    data: null;\n    error: {\n        status: string;\n        name: string;\n        message: string;\n        details: any;\n    };\n};\n\nexport type Res<T> = Req.Res<T, StrapiError>;\n\nexport async function send<T>(args: Req.Args): Promise<Res<T>> {\n    const argsCopy = { ...args };\n    argsCopy.path = `${backendURL}${args.path}`;\n    if (args.auth) argsCopy.auth = `Bearer ${args.auth}`;\n\n    return await req.send<T, StrapiError>({ ...argsCopy });\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { HTTPMethod, UsersPermissionsLoginPayload } from \"../../types\";\nimport { send as s } from \"../../join-request\";\n\n//\n\nexport const path = \"/account/register\";\nexport const method = HTTPMethod.POST;\n\nexport type Req = {\n    name: string;\n    surname: string;\n    email: string;\n    password: string;\n};\n\nexport const values: Req = {\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n};\n\nexport const schema = yup\n    .object({\n        name: yup.string().required(),\n        surname: yup.string().required(),\n        email: Schemas.email.required(),\n        password: yup.string().required(),\n    })\n    .required();\n\nexport interface Res extends UsersPermissionsLoginPayload {}\n\nexport async function send(data: Req, fetchImpl = fetch) {\n    return s<Res>({ path, method, data, fetchImpl });\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { HTTPMethod } from \"../../types\";\n\nexport namespace UserExists {\n\texport const path = \"/account/user-exists\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\temail: string;\n\t}\n\n\texport const values: Req = {\n\t\temail: \"\",\n\t};\n\n\texport const schema = yup\n\t\t.object({\n\t\t\temail: Schemas.email.required(),\n\t\t})\n\t\t.required();\n\n\texport interface Res {\n\t\texists: boolean;\n\t}\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { UsersPermissionsMe } from \"../../types\";\nimport { Request as Req } from \"../../request\";\nimport { send as s, Res as R } from \"../../join-request\";\n\n//\n\nexport const path = \"/auth/local\";\nexport const method = Req.HTTPMethod.POST;\n\nexport type Req = {\n    identifier: string;\n    password: string;\n};\n\nexport const values: Req = {\n    identifier: \"\",\n    password: \"\",\n};\n\nexport const schema = yup\n    .object({\n        identifier: Schemas.email.required(),\n        password: yup.string().required(),\n    })\n    .required();\n\nexport type Res = {\n    user: UsersPermissionsMe;\n    jwt: string;\n};\n\nexport async function send(data: Req, fetchImpl = fetch) {\n    return s<Res>({ path, method, data, fetchImpl });\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../../validation\";\nimport { HTTPMethod } from \"../../../types\";\n\nexport namespace Forgot {\n\texport const path = \"/auth/forgot-password\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\temail: string;\n\t}\n\n\texport const values: Req = {\n\t\temail: \"\",\n\t};\n\n\texport const schema = yup\n\t\t.object({\n\t\t\temail: Schemas.email.required(),\n\t\t})\n\t\t.required();\n\n\texport interface Res {\n\t\tok: boolean;\n\t\t// Also, there's a redirection\n\t\t// The url has a code needed for the reset\n\t}\n}\n","import * as yup from \"yup\";\nimport { HTTPMethod, UsersPermissionsMe } from \"../../../types\";\n\nexport namespace Reset {\n\texport const path = \"/auth/reset-password\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\tpassword: string;\n\t\tpasswordConfirmation: string;\n\t\tcode: string;\n\t}\n\n\texport const values: Req = {\n\t\tpassword: \"string\",\n\t\tpasswordConfirmation: \"string\",\n\t\tcode: \"string\",\n\t};\n\n\texport const schema = yup\n\t\t.object({\n\t\t\tpassword: yup.string().required(),\n\t\t\tpasswordConfirmation: yup.string().required(),\n\t\t\tcode: yup.string().required(),\n\t\t})\n\t\t.required();\n\n\texport interface Res {\n\t\tuser: UsersPermissionsMe;\n\t\tjwt: string;\n\t}\n}\n","import { send as s } from \"$join-request\";\nimport { Request } from \"$request\";\nimport { UsersPermissionsMe, UserInfo } from \"../../types\";\n\nexport const path = \"/users/me?populate=info\";\nexport const method = Request.HTTPMethod.GET;\n\nexport type Res = (UsersPermissionsMe & { info: UserInfo }) | undefined;\n\nexport async function send(token: string, fetchImpl = fetch) {\n    return s<Res>({\n        path,\n        method,\n        auth: token,\n        fetchImpl,\n    });\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { Shape } from \"../../types\";\n\nexport namespace Contacts {\n\texport interface Type {\n\t\temail: string;\n\t\tname: string;\n\t\tsurname: string;\n\t\tphone: string;\n\t}\n\n\texport const values: Type = {\n\t\temail: \"\",\n\t\tname: \"\",\n\t\tsurname: \"\",\n\t\tphone: \"\",\n\t};\n\n\tconst USER_EXISTS = \"$userExists\";\n\texport const schema = yup.object<Shape<Type>>({\n\t\temail: yup.string().email().when(USER_EXISTS, Schemas.thenReq(false)),\n\t\tname: yup.string().when(USER_EXISTS, Schemas.thenReq(false)),\n\t\tsurname: yup.string().when(USER_EXISTS, Schemas.thenReq(false)),\n\t\tphone: Schemas.phone.required(),\n\t});\n\n\texport interface ISchemaCtx {\n\t\tuserExists: boolean;\n\t}\n\n\texport function getSchemaCtx(userExists: boolean): ISchemaCtx {\n\t\treturn { userExists };\n\t}\n}\n","import * as yup from \"yup\";\nimport { Schemas } from \"../../validation\";\nimport { Shape } from \"../../types\";\n\nexport namespace Evaluation {\n\texport interface Type {\n\t\tletter: string;\n\t\tportfolio: string;\n\t\tcv: string;\n\t}\n\texport const values: Type = {\n\t\tletter: \"\",\n\t\tportfolio: \"\",\n\t\tcv: \"\",\n\t};\n\n\texport const schema = yup.object<Shape<Type>>({\n\t\tletter: yup.string().when(\"$letterNeeded\", Schemas.thenReq(true)),\n\t\tportfolio: yup\n\t\t\t.string()\n\t\t\t.when(\"$portfolioNeeded\", Schemas.thenUrlReq(true)),\n\t\tcv: yup.string().when(\"$cvNeeded\", Schemas.thenUrlReq(true)),\n\t});\n\n\texport interface ISchemaCtx {\n\t\tletterNeeded: boolean;\n\t\tportfolioNeeded: boolean;\n\t\tcvNeeded: boolean;\n\t}\n\n\texport function getSchemaCtx(\n\t\tletterNeeded: boolean,\n\t\tportfolioNeeded: boolean,\n\t\tcvNeeded: boolean\n\t): ISchemaCtx {\n\t\treturn {\n\t\t\tletterNeeded,\n\t\t\tportfolioNeeded,\n\t\t\tcvNeeded,\n\t\t};\n\t}\n}\n","import * as yup from \"yup\";\nimport { ComponentSpaceAddress, Shape, CleanComp } from \"$types\";\nimport { Schemas } from \"$validation\";\n\nexport namespace Address {\n\texport interface Type extends CleanComp<ComponentSpaceAddress> {}\n\n\texport const values: Type = {\n\t\tcountry: \"\",\n\t\tadministrativeArea: \"\",\n\t\tcity: \"\",\n\t\tpostCode: \"\",\n\t\tstreet: \"\",\n\t\tnumber: \"\",\n\t};\n\n\texport const schema = yup.object<Shape<Type>>({\n\t\tcountry: yup.string().required(),\n\t\tadministrativeArea: Schemas.provincia.required(),\n\t\tcity: yup.string().required(),\n\t\tpostCode: Schemas.cap.required(),\n\t\tstreet: yup.string().required(),\n\t\tnumber: yup.string().required(),\n\t});\n}\n","import { ComponentBillingOwner, CleanComp, Shape } from \"$types\";\nimport { Schemas } from \"$validation\";\nimport * as yup from \"yup\";\n\n//\n\nexport namespace Owner {\n\texport interface Type extends CleanComp<ComponentBillingOwner> {}\n\n\texport const values: Type = {\n\t\tfiscalCode: \"\",\n\t};\n\n\texport const schema = yup.object<Shape<Type>>({\n\t\tfiscalCode: Schemas.cf.required(),\n\t});\n}\n","import { ComponentBillingPerson, CleanComp, Shape } from \"$types\";\nimport { Schemas } from \"$validation\";\nimport * as yup from \"yup\";\n\n//\n\nexport namespace Person {\n\texport interface Type extends CleanComp<ComponentBillingPerson> {}\n\n\texport const values: Type = {\n\t\tname: \"\",\n\t\tsurname: \"\",\n\t\tfiscalCode: \"\",\n\t\temail: \"\",\n\t};\n\n\texport const schema = yup.object<Shape<Type>>({\n\t\tname: yup.string().required(),\n\t\tsurname: yup.string().required(),\n\t\tfiscalCode: Schemas.cf.required(),\n\t\temail: Schemas.email.required(),\n\t});\n}\n","import { ComponentBillingCompany, CleanComp, Shape } from \"$types\";\nimport { Schemas } from \"$validation\";\nimport * as yup from \"yup\";\n\n//\n\nexport namespace Company {\n\texport interface Type extends CleanComp<ComponentBillingCompany> {}\n\n\texport const values: Type = {\n\t\tname: \"\",\n\t\tvatNumber: \"\",\n\t\tsdiCode: \"\",\n\t\tcertifiedEmail: \"\",\n\t};\n\n\texport const schema = yup.object<Shape<Type>>({\n\t\tname: yup.string().required(),\n\t\tvatNumber: Schemas.vat.required(),\n\t\tsdiCode: Schemas.sdi,\n\t\tcertifiedEmail: Schemas.pec.required(),\n\t});\n}\n","export { Owner } from \"./owner\";\nexport { Person } from \"./person\";\nexport { Company } from \"./company\";\n\nexport const Options = [\"owner\", \"person\", \"company\"] as const;\nexport type Option = typeof Options[number];\n","import * as yup from \"yup\";\nimport { Billing, Address } from \"../utils\";\nimport { HTTPMethod, Shape } from \"$types\";\nimport { Schemas } from \"$validation\";\n\nexport namespace Execute {\n\texport const path = \"/pay/execute\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\tpaymentId: string;\n\t\tbillingOption: Billing.Option;\n\t\towner: Billing.Owner.Type;\n\t\tperson: Billing.Person.Type;\n\t\tcompany: Billing.Company.Type;\n\t\taddress: Address.Type;\n\t}\n\n\texport const values: Req = {\n\t\tpaymentId: \"\",\n\t\tbillingOption: Billing.Options[0],\n\t\towner: Billing.Owner.values,\n\t\tperson: Billing.Person.values,\n\t\tcompany: Billing.Company.values,\n\t\taddress: Address.values,\n\t};\n\n\texport const schema = yup.object<Shape<Req>>({\n\t\tpaymentId: yup.string().required(),\n\t\tbillingOption: yup\n\t\t\t.string()\n\t\t\t.oneOf([...Billing.Options])\n\t\t\t.required(),\n\t\towner: Billing.Owner.schema.when(\n\t\t\t\"billingOption\",\n\t\t\tSchemas.thenReq(Billing.Options[0])\n\t\t),\n\t\tperson: Billing.Person.schema.when(\n\t\t\t\"billingOption\",\n\t\t\tSchemas.thenReq(Billing.Options[1])\n\t\t),\n\t\tcompany: Billing.Company.schema.when(\n\t\t\t\"billingOption\",\n\t\t\tSchemas.thenReq(Billing.Options[2])\n\t\t),\n\t\taddress: Address.schema.required(),\n\t});\n\n\texport interface Res {\n\t\tsessionUrl: string | null;\n\t}\n}\n","import * as yup from \"yup\";\nimport { HTTPMethod, Shape } from \"$types\";\n\nexport namespace Confirm {\n    export const path = \"/pay/confirm\";\n    export const method = HTTPMethod.POST;\n\n    export interface Req {\n        confirmationCode: string;\n    }\n\n    export const schema = yup.object<Shape<Req>>({\n        confirmationCode: yup.string().required(),\n    });\n\n    export interface Res {\n        confirmed: boolean;\n    }\n\n    export interface Pino {\n        pino: number;\n    }\n}\n","import * as yup from \"yup\";\nimport {\n\tHTTPMethod,\n\tEnum_Enrollment_State,\n\tShape,\n\tEnrollmentStates,\n} from \"$types\";\n\n//\n\nexport namespace Update {\n\texport const path = \"/admin-enrollments/update\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Item {\n\t\tid: string;\n\t\tstate: Enum_Enrollment_State;\n\t}\n\n\texport const itemSchema = yup.object<Shape<Item>>({\n\t\tid: yup.string().required(),\n\t\tstate: yup.string().oneOf(EnrollmentStates).required(),\n\t});\n\n\texport interface Req {\n\t\tchanges: Array<Item>;\n\t}\n\n\texport const schema = yup.object({\n\t\tchanges: yup.array(itemSchema).required(),\n\t});\n\n\texport interface Res {}\n}\n","import * as yup from \"yup\";\nimport { Contacts, Evaluation } from \"../utils\";\nimport { HTTPMethod, Shape } from \"../../types\";\n\nexport namespace Enroll {\n\texport const path = \"/enroll\";\n\texport const method = HTTPMethod.POST;\n\n\texport interface Req {\n\t\tcourseId: string;\n\t\tcontacts: Contacts.Type;\n\t\tevaluation: Evaluation.Type;\n\t}\n\n\texport const values: Req = {\n\t\tcourseId: \"\",\n\t\tcontacts: Contacts.values,\n\t\tevaluation: Evaluation.values,\n\t};\n\n\texport const schema = yup.object<Shape<Req>>({\n\t\tcourseId: yup.string().required(),\n\t\tcontacts: Contacts.schema.required(),\n\t\tevaluation: Evaluation.schema.required(),\n\t});\n\n\texport type Res = {\n\t\tpaymentUID: string | null;\n\t};\n\n\texport function getSchemaCtx(\n\t\tuserExists: boolean,\n\t\tletterNeeded: boolean,\n\t\tportfolioNeeded: boolean,\n\t\tcvNeeded: boolean\n\t): ISchemaCtx {\n\t\treturn {\n\t\t\t...Contacts.getSchemaCtx(userExists),\n\t\t\t...Evaluation.getSchemaCtx(letterNeeded, portfolioNeeded, cvNeeded),\n\t\t};\n\t}\n\n\texport interface ISchemaCtx\n\t\textends Contacts.ISchemaCtx,\n\t\t\tEvaluation.ISchemaCtx {}\n}\n","export const errors = {\n\tpolicies: {\n\t\tnoSchemaInConfig: \"noSchemaInConfig\",\n\t\tbodyNotValid: \"bodyNotValid\",\n\t},\n\tmissingCourseId: \"missingCourseId\",\n\tcourseNotFound: \"courseNotFound\",\n\temailAlreadyExisting: \"emailAlreadyExisting\",\n\talreadyEnrolled: \"alreadyEnrolled\",\n\tpastDeadline: \"pastDeadline\",\n\tuserNotCreated: \"userNotCreated\",\n\tbadPolicyConfig: \"badPolicyConfig\",\n\tdefaultRoleNotFound: \"defaultRoleNotFound\",\n\temailSendError: \"emailSendError\",\n\temailTaken: \"emailTaken\",\n\tenrollmentExpired: \"enrollmentExpired\",\n\tinternalServerError: \"internalServerError\",\n\tinvalidRequestBody: \"invalidRequestBody\",\n\tinvalidRole: \"invalidRole\",\n\tmissingCourseID: \"missingCourseID\",\n\tmissingUserInfo: \"missingUserInfo\",\n\tnoSchemaProvidedInPolicyConfig: \"noSchemaProvidedInPolicyConfig\",\n\tnotFound: \"notFound\",\n\tpasswordThreeDollars: \"passwordThreeDollars\",\n\tpaymentAlreadyConfirmed: \"paymentAlreadyConfirmed\",\n\tpaymentAlreadyExecuted: \"paymentAlreadyExecuted\",\n\tpaymentExpired: \"paymentExpired\",\n\tpaymentNotFound: \"paymentNotFound\",\n\tregisterDisabled: \"registerDisabled\",\n\tunknownError: \"unknownError\",\n\tuserExists: \"userExists\",\n\tuserNotConfirmed: \"userNotConfirmed\",\n\tuserNotFound: \"userNotFound\",\n\tvalidationError: \"validationError\",\n};\n","import { Course as ICourse } from \"$types\";\nimport { Evaluation } from \"$routes\";\n\nexport namespace Course {\n\texport function getEvaluationSchemaCtx(c: ICourse): Evaluation.ISchemaCtx {\n\t\treturn {\n\t\t\tcvNeeded: c.cvNeeded,\n\t\t\tletterNeeded: c.motivationalLetterNeeded,\n\t\t\tportfolioNeeded: c.portfolioNeeded,\n\t\t};\n\t}\n\n\texport function isPaymentNeeded(c: ICourse): boolean {\n\t\treturn c.price > 0;\n\t}\n}\n","import { Payment as IPayment } from \"../types\";\n\nexport namespace Payment {\n\texport function isExpired(date: string): boolean {\n\t\treturn new Date() > new Date(date);\n\t}\n}\n","export const formatPriceNumber = (\n\tprice: number,\n\tlocale = \"IT-it\",\n\tcurrency = \"EUR\"\n) => {\n\tconst formatter = new Intl.NumberFormat(locale, {\n\t\tstyle: \"currency\",\n\t\tcurrency,\n\t});\n\treturn formatter.format(price);\n};\n\nexport function formatDate(date: Date, locale = \"IT-it\") {\n\treturn date.toLocaleDateString(locale, {\n\t\tmonth: \"2-digit\",\n\t\tday: \"2-digit\",\n\t\tyear: \"2-digit\",\n\t});\n}\n"],"names":["Regex","vat","sdi","cf","provincia","cap","pec","phone","url","Schemas","yup","string","lowercase","matches","re","uppercase","email","thenReq","value","is","then","schema","required","otherwise","nullable","optional","thenUrlReq","thenNull","nullOrReq","v","s","Enum_Enrollment_State","PublicationState","PaymentCategories","EnrollmentStates","Object","values","HTTPMethod","send","method","path","data","auth","fetchImpl","fetch","opts","headers","GET","body","JSON","stringify","res","json","ok","status","statusText","error","e","Error","backendURL","args","argsCopy","req","POST","name","surname","password","object","UserExists","Req","identifier","Forgot","Reset","passwordConfirmation","code","Request","token","Contacts","USER_EXISTS","when","getSchemaCtx","userExists","Evaluation","letter","portfolio","cv","letterNeeded","portfolioNeeded","cvNeeded","Address","country","administrativeArea","city","postCode","street","number","Owner","fiscalCode","Person","Company","vatNumber","sdiCode","certifiedEmail","Options","Execute","paymentId","billingOption","Billing","owner","person","company","address","oneOf","Confirm","confirmationCode","Update","itemSchema","id","state","changes","array","Enroll","courseId","contacts","evaluation","errors","policies","noSchemaInConfig","bodyNotValid","missingCourseId","courseNotFound","emailAlreadyExisting","alreadyEnrolled","pastDeadline","userNotCreated","badPolicyConfig","defaultRoleNotFound","emailSendError","emailTaken","enrollmentExpired","internalServerError","invalidRequestBody","invalidRole","missingCourseID","missingUserInfo","noSchemaProvidedInPolicyConfig","notFound","passwordThreeDollars","paymentAlreadyConfirmed","paymentAlreadyExecuted","paymentExpired","paymentNotFound","registerDisabled","unknownError","userNotConfirmed","userNotFound","validationError","Course","getEvaluationSchemaCtx","c","motivationalLetterNeeded","isPaymentNeeded","price","Payment","isExpired","date","Date","formatPriceNumber","locale","currency","formatter","Intl","NumberFormat","style","format","formatDate","toLocaleDateString","month","day","year"],"mappings":"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"}